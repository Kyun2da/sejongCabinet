{"version":3,"sources":["utils/firebase/writeUserData.js","redux/auth/auth.types.js","redux/auth/auth.reducer.js","redux/cabinet/cabinet.types.js","redux/cabinet/cabinet.reducer.js","redux/server/server.types.js","redux/server/server.reducer.js","redux/root.reducer.js","redux/store.js","image/softwareLogo_origin.png","MediaQuery.js","Pages/Login.js","utils/error/auth/authError.js","utils/error/auth/customErrorMessages.js","Mobile/LoginMobile.js","Container/LoginContainer.js","image/Backward.png","Pages/SignUp.js","Mobile/SignUpMobile.js","Container/SIgnUpContainer.js","Pages/ServerLoadingPage.js","Pages/LoadingPage.js","Pages/Cabinet.js","image/pcHelp.png","image/mobileHelp.png","Pages/SimpleModal.js","Pages/MainPage.js","Mobile/MainPageMobile.js","utils/firebase/breakDownCabinet.js","utils/firebase/cancelCabinet.js","utils/firebase/enrollCabinet.js","utils/firebase/fixCabinet.js","utils/firebase/logoutUser.js","image/Cabinet001.png","image/Cabinet049.png","image/Cabinet061.png","image/Cabinet085.png","image/Cabinet145.png","image/Cabinet6x6.jpg","image/Cabinet6x10.jpg","Container/MainPageContainer.js","Pages/Userpage.js","Mobile/UserPageMobile.js","utils/firebase/updatePassword.js","Container/UserPageContainer.js","Pages/AdminPage.js","Mobile/AdminPageMobile.js","utils/firebase/setServerStatus.js","Container/AdminPageContainer.js","utils/firebase/getUserData.js","utils/firebase/getCabinetData.js","utils/firebase/getServerData.js","App.js","index.js","configs/firebase.config.js"],"names":["writeUserData","userId","name","studentID","cabinetTitle","cabinetIdx","database","ref","set","adminType","authTypes","SET_CURRENT_USER","SET_CURRENT_USER_NAME_AND_ID","CLEAR_CURRENT_USER","setCurrentUser","createAction","setCurrentUserNameAndID","clearCurrentUser","authReducer","handleActions","state","action","currentUser","payload","currentUserName","currentUserID","studentId","uid","SET_CURRENT_CABINETS","setCurrentCabinets","cabinetTypes","cabinetReducer","currentCabinets","serverTypes","SET_CURRENT_SERVERS","setCurrentServer","serverReducer","status","rootReducer","combineReducers","auth","cabinet","server","middlewares","logger","store","createStore","composeWithDevTools","applyMiddleware","Mobile","children","useMediaQuery","maxWidth","Default","minWidth","Container","styled","div","Login","props","LoginSubmit","onIdHandler","onPasswordHanlder","toSignUp","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","src","Logo","alt","width","style","margin","fontSize","fontWeight","letterSpacing","borderBottom","onSubmit","noValidate","autoComplete","justifyContent","flexDirection","display","TextField","id","label","variant","onChange","type","Button","height","backgroundColor","color","border","onClick","getFirebaseErrorMessage","code","message","LoginMobile","alignItems","LoginContainer","history","useHistory","useState","_id","setId","_password","setPassword","useSelector","e","currentTarget","value","toMainPage","push","preventDefault","signInWithEmailAndPassword","then","catch","err","Swal","fire","icon","title","text","showConfirmButton","timer","useStyles","makeStyles","theme","backwards","opacity","SignUp","SignUpSubmit","linktoLogin","onPasswordHandler","onStudentIdHandler","onNameHandler","classes","borderTop","padding","borderRadius","position","className","marginTop","textAlign","placeholder","MobileDivider","SignUpMobile","SIgnUpContainer","dispatch","useDispatch","setStudentId","setName","createUserWithEmailAndPassword","user","_name","root","flexGrow","transform","modal","spacing","paper","mpaper","ServerLoadingPage","rootRef","React","useRef","Modal","disablePortal","disableEnforceFocus","disableAutoFocus","open","aria-labelledby","aria-describedby","container","current","paddingLeft","CircularProgress","size","marginBottom","LoadingPage","Content","MContent","StatusValue","overflow","mroot","button","fontFamily","button2","cursor","button3","button4","Mbutton","outline","Mbutton2","Mbutton3","Mbutton4","Cabinet","data","item","select","setSelect","cabinetNum","cabinetEnroll","cabinetCancel","cabinetBreakDown","cabinetFix","onClickFunc","console","log","count","setCount","toggle","setToggle","useEffect","newCount","i","length","loadGridRow","Array","map","v","index","arrIdx","Grid","xs","stopPropagation","disabled","Tooltip","arrow","disableRipple","MloadGridRow","marginRight","FormControlLabel","control","Switch","checked","event","target","inputProps","placement","MarginLeft","marginLeft","marginBotto","getModalStyle","top","left","palette","background","mmodal","SimpleModal","setOpen","modalStyle","body","pcHelp","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","mobileHelp","styles","tabs","tab_pc","slide","minHeight","MainPage","_map","visibleMap","handleChange","handleChangeIndex","onClickLogout","onClickUserPage","onClickAdminPage","cabinetNames","mapImage","cabinetImage","anchorEl","setAnchorEl","toggleHelp","setToggleHelp","handleOpen","aria-hidden","right","IconButton","aria-label","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","MenuItem","SwipeableDrawer","anchor","onOpen","rowGpa","Tabs","fullwidth","textColor","indicatorColor","centered","Tab","onChangeIndex","animateHeight","Mtabs","tab_mobile","MainPageMobile","require","default","breakDownCabinet","transaction","error","committed","snapshot","cancelCabinet","userCabinetTitle","userCabinetIdx","enrollCabinet","html","showCancelButton","confirmButtonText","cancelButtonText","result","isConfirmed","fixCabinet","logOutUser","signOut","MainPageContainer","serverStatus","setIndex","setMapImage","setCabinetImage","Cabinet001","Cabinet6x6","Cabinet049","Cabinet6x10","Cabinet061","Cabinet085","Cabinet145","newValue","UserpageTitle","cancleButton","changeButton","UserPage","currentUserCabinetIdx","currentUserCabinetTitle","updatePW","currentPassword","setCurrent","changePassword","setChange","confirmPassword","setConfirm","passwordChangeFunc","a","to","filter","columnGap","parseInt","substr","FormControl","MUserpageTitle","McancleButton","MchangeButton","UserPageMobile","paddingBottom","updatePassword","currentPW","newPW","confirmPW","credential","firebase","EmailAuthProvider","email","reauthenticateWithCredential","UserPageContainer","currentUserCabinetNum","Userpage","AdminpageTitle","AdminPage","total","toggleServer","MAdminpageTitle","AdminPageMobile","toggleServerStatus","once","val","AdminPageContainer","setTotal","Object","keys","forEach","key","getUserData","on","getCabinetData","getServerData","App","unsubscribeFromAuth","onAuthStateChanged","off","basename","process","path","component","exact","rootElement","ReactDOM","render","document","getElementById","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId"],"mappings":"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","file":"static/js/main.605d04df.chunk.js","sourcesContent":["import { database } from '../../configs/firebase.config';\r\n\r\nconst writeUserData = (userId, name, studentID, cabinetTitle, cabinetIdx) => {\r\n  database.ref(`users/${userId}`).set({\r\n    name,\r\n    studentID,\r\n    cabinetTitle,\r\n    cabinetIdx,\r\n    adminType: false,\r\n  });\r\n};\r\n\r\nexport default writeUserData;\r\n","const authTypes = {\r\n  // consts here\r\n  SET_CURRENT_USER: 'SET_CURRENT_USER',\r\n  SET_CURRENT_USER_NAME_AND_ID: 'SET_CURRENT_USER_NAME_AND_ID',\r\n  CLEAR_CURRENT_USER: 'CLEAR_CURRENT_USER',\r\n};\r\n\r\nexport default authTypes;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport authTypes from './auth.types';\r\n\r\nconst initialState = {\r\n  currentUser: {\r\n    uid: null,\r\n  },\r\n  currentUserName: null,\r\n  currentUserID: null,\r\n  cabinetTitle: null,\r\n  cabinetIdx: null,\r\n  adminType: null,\r\n};\r\n\r\nexport const setCurrentUser = createAction(authTypes.SET_CURRENT_USER);\r\nexport const setCurrentUserNameAndID = createAction(\r\n  authTypes.SET_CURRENT_USER_NAME_AND_ID,\r\n);\r\nexport const clearCurrentUser = createAction(authTypes.CLEAR_CURRENT_USER);\r\n\r\nconst authReducer = handleActions(\r\n  {\r\n    [setCurrentUser]: (state, action) => ({\r\n      ...state,\r\n      currentUser: action.payload,\r\n    }),\r\n    [setCurrentUserNameAndID]: (state, action) => ({\r\n      ...state,\r\n      currentUserName: action.payload.name,\r\n      currentUserID: action.payload.studentId,\r\n      cabinetTitle: action.payload.cabinetTitle,\r\n      cabinetIdx: action.payload.cabinetIdx,\r\n      adminType: action.payload.adminType,\r\n    }),\r\n    [clearCurrentUser]: (state) => ({\r\n      ...state,\r\n      currentUser: {\r\n        uid: null,\r\n      },\r\n      currentUserName: null,\r\n      currentUserID: null,\r\n      cabinetTitle: null,\r\n      cabinetIdx: null,\r\n      adminType: null,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default authReducer;\r\n","const authTypes = {\r\n  // consts here\r\n  SET_CURRENT_CABINETS: 'SET_CURRENT_CABINETS',\r\n};\r\n\r\nexport default authTypes;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport cabinetTypes from './cabinet.types';\r\n\r\nconst initialState = {\r\n  currentCabinets: null,\r\n};\r\n\r\nexport const setCurrentCabinets = createAction(\r\n  cabinetTypes.SET_CURRENT_CABINETS,\r\n);\r\n\r\nconst cabinetReducer = handleActions(\r\n  {\r\n    [setCurrentCabinets]: (state, action) => ({\r\n      ...state,\r\n      currentCabinets: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default cabinetReducer;\r\n","const serverTypes = {\r\n  // consts here\r\n  SET_CURRENT_SERVERS: 'SET_CURRENT_SERVERS',\r\n};\r\n\r\nexport default serverTypes;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport serverTypes from './server.types';\r\n\r\nconst initialState = {\r\n  status: null,\r\n};\r\n\r\nexport const setCurrentServer = createAction(serverTypes.SET_CURRENT_SERVERS);\r\n\r\nconst serverReducer = handleActions(\r\n  {\r\n    [setCurrentServer]: (state, action) => ({\r\n      ...state,\r\n      status: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default serverReducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './auth/auth.reducer';\r\nimport cabinetReducer from './cabinet/cabinet.reducer';\r\nimport serverReducer from './server/server.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  cabinet: cabinetReducer,\r\n  server: serverReducer,\r\n  // 다른 리듀서를 만들게되면 여기에 넣어줌\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './root.reducer';\r\n\r\n// 하나의 미들웨어를 쓰고있지만 나중에 다른 미들웨어를 쓸 수 있으므로 배열로 만듬\r\nconst middlewares = [logger];\r\n\r\n// root reducer로 사용하는 store를 만듦 redux devtools로 구성된 미들웨어를 사용함\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middlewares)),\r\n);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/softwareLogo_origin.895cb9d8.png\";","import { useMediaQuery } from 'react-responsive';\r\n\r\nconst PC = ({ children }) => {\r\n  const isDesktop = useMediaQuery({ minWidth: 992 });\r\n  return isDesktop ? children : null;\r\n};\r\nconst Tablet = ({ children }) => {\r\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\r\n  return isTablet ? children : null;\r\n};\r\nconst Mobile = ({ children }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 767 });\r\n  return isMobile ? children : null;\r\n};\r\nconst Default = ({ children }) => {\r\n  const isNotMobile = useMediaQuery({ minWidth: 768 });\r\n  return isNotMobile ? children : null;\r\n};\r\n\r\nexport { Mobile, Tablet, PC, Default };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport Logo from '../image/softwareLogo_origin.png';\r\nimport './Fadeout.css';\r\nimport { Mobile, Default } from '../MediaQuery';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-contents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst Login = (props) => {\r\n  const { LoginSubmit, onIdHandler, onPasswordHanlder, toSignUp } = props;\r\n  return (\r\n    <CSSTransitionGroup\r\n      transitionName=\"homeTransition\"\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n      transitionEnter={false}\r\n      transitionLeave={false}\r\n    >\r\n      <Container>\r\n        <img\r\n          src={Logo}\r\n          alt=\"logo\"\r\n          width=\"180vw\"\r\n          style={{ margin: '9vh 0 0 ' }}\r\n        />\r\n\r\n        <p\r\n          style={{\r\n            fontSize: '2vw',\r\n            fontWeight: 'bold',\r\n            letterSpacing: '1vw',\r\n            borderBottom: '0.1vw solid black',\r\n            margin: '1.5rem 0 0',\r\n          }}\r\n        >\r\n          SEJONG UNIV\r\n        </p>\r\n        <p\r\n          style={{\r\n            fontSize: '1.2vw',\r\n            fontWeight: 'bolder',\r\n            letterSpacing: '0.8vw',\r\n            margin: '0.3rem 0 2rem',\r\n          }}\r\n        >\r\n          소프트웨어학과 사물함\r\n        </p>\r\n        <form\r\n          onSubmit={LoginSubmit}\r\n          name=\"login\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          style={{\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            display: 'flex',\r\n          }}\r\n        >\r\n          <TextField\r\n            id=\"id\"\r\n            label=\"ID\"\r\n            variant=\"outlined\"\r\n            onChange={onIdHandler}\r\n            style={{ width: '30vw', margin: '1vh' }}\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            onChange={onPasswordHanlder}\r\n            style={{ width: '30vw', margin: '1vh' }}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            style={{\r\n              width: '30vw',\r\n              height: '5vh',\r\n              backgroundColor: 'rgb(63,81,181)',\r\n              color: 'white',\r\n              border: '1px solid rgb(63,81,181)',\r\n              margin: '1vh',\r\n            }}\r\n          >\r\n            로그인\r\n          </Button>\r\n        </form>\r\n        <div style={{ display: 'inline-block', margin: '2vh 0 0' }}>\r\n          계정이 없으신가요?\r\n          <Button\r\n            onClick={toSignUp}\r\n            style={{\r\n              color: '#0500FF',\r\n              backgroundColor: 'transparent',\r\n              fontSize: '1rem',\r\n            }}\r\n          >\r\n            가입하기\r\n          </Button>\r\n        </div>\r\n        {/* <Mobile style={{ textalign: 'center' }}>\r\n          <img\r\n            src={Logo}\r\n            alt=\"logo\"\r\n            width=\"150vw\"\r\n            style={{ margin: '10vh 0 0 ' }}\r\n          />\r\n          <p\r\n            style={{\r\n              fontSize: '3vh',\r\n              fontWeight: 'bold',\r\n              letterSpacing: '3vw',\r\n              borderBottom: '2px solid black',\r\n              margin: '1.5rem 0 0',\r\n            }}\r\n          >\r\n            SEJONG UNIV\r\n          </p>\r\n          <p\r\n            style={{\r\n              fontSize: '2vh',\r\n              fontWeight: 'bolder',\r\n              letterSpacing: '2vw',\r\n              margin: '0.3rem 0 2rem',\r\n            }}\r\n          >\r\n            소프트웨어학과 사물함\r\n          </p>\r\n          <form\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={LoginSubmit}\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              flexDirection: 'column',\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <TextField\r\n              id=\"id\"\r\n              label=\"ID\"\r\n              variant=\"outlined\"\r\n              onChange={onIdHandler}\r\n              style={{ width: '80vw', margin: '1vh 0' }}\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              onChange={onPasswordHanlder}\r\n              style={{ width: '80vw', margin: '1vh 0' }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              style={{\r\n                width: '80vw',\r\n                height: '3.5rem',\r\n                backgroundColor: 'rgb(63,81,181)',\r\n                color: 'white',\r\n                border: '1px solid rgb(63,81,181)',\r\n                margin: '1vh',\r\n              }}\r\n            >\r\n              로그인\r\n            </Button>\r\n          </form>\r\n          <div\r\n            style={{\r\n              display: 'inline-block',\r\n              margin: '1rem 0 0',\r\n            }}\r\n          >\r\n            계정이 없으신가요?\r\n            <Button\r\n              onClick={toSignUp}\r\n              style={{\r\n                color: '#0500FF',\r\n                backgroundColor: 'transparent',\r\n                fontSize: '1rem',\r\n              }}\r\n            >\r\n              가입하기\r\n            </Button>\r\n          </div>\r\n        </Mobile> */}\r\n      </Container>\r\n    </CSSTransitionGroup>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  LoginSubmit: PropTypes.func.isRequired,\r\n  onIdHandler: PropTypes.func.isRequired,\r\n  onPasswordHanlder: PropTypes.func.isRequired,\r\n  toSignUp: PropTypes.func.isRequired,\r\n};\r\nexport default Login;\r\n","import * as ERROR_MESSAGES from './customErrorMessages';\r\n\r\nconst getFirebaseErrorMessage = (code) => {\r\n  let message = null;\r\n\r\n  switch (code) {\r\n    case 'auth/weak-password':\r\n      message = ERROR_MESSAGES.AUTH_WEAK_PASSWORD;\r\n      break;\r\n    case 'auth/email-already-in-use':\r\n      message = ERROR_MESSAGES.EMAIL_ALREADY_IN_USE;\r\n      break;\r\n    case 'auth/too-many-requests':\r\n      message = ERROR_MESSAGES.TOO_MANY_REQUESTS;\r\n      break;\r\n    case 'auth/wrong-password':\r\n      message = ERROR_MESSAGES.AUTH_WRONG_PASSWORD;\r\n      break;\r\n    case 'auth/claims-too-large':\r\n      message = ERROR_MESSAGES.CLAIMS_TOO_LARGE;\r\n      break;\r\n    case 'auth/email-already-exists':\r\n      message = ERROR_MESSAGES.EMAIL_ALREADY_EXIST;\r\n      break;\r\n    case 'auth/id-token-expired':\r\n      message = ERROR_MESSAGES.ID_TOKEN_EXPIRED;\r\n      break;\r\n    case 'auth/id-token-revoked':\r\n      message = ERROR_MESSAGES.ID_TOKEN_REVOKED;\r\n      break;\r\n    case 'auth/insufficient-permission':\r\n      message = ERROR_MESSAGES.INSUFFICIENT_PERMISSION;\r\n      break;\r\n    case 'auth/internal-error':\r\n      message = ERROR_MESSAGES.INTERNAL_ERROR;\r\n      break;\r\n    case 'auth/invalid-argument':\r\n      message = ERROR_MESSAGES.INVALID_ARGUMENT;\r\n      break;\r\n    case 'auth/invalid-claims':\r\n      message = ERROR_MESSAGES.INVALID_CLAIMS;\r\n      break;\r\n    case 'auth/invalid-continue-uri':\r\n      message = ERROR_MESSAGES.INVALID_CONTINUE_URI;\r\n      break;\r\n    case 'auth/invalid-creation-time':\r\n      message = ERROR_MESSAGES.INVALID_CREATION_TIME;\r\n      break;\r\n    case 'auth/invalid-credential':\r\n      message = ERROR_MESSAGES.INVALID_CREDENTIAL;\r\n      break;\r\n    case 'auth/invalid-disabled-field':\r\n      message = ERROR_MESSAGES.INVALID_DISABLE_FIELD;\r\n      break;\r\n    case 'auth/invalid-display-name':\r\n      message = ERROR_MESSAGES.INVALID_DISPLAY_NAME;\r\n      break;\r\n    case 'auth/invalid-dynamic-link-domain':\r\n      message = ERROR_MESSAGES.INVALID_DYNAMIC_LINK_DOMAIN;\r\n      break;\r\n    case 'auth/invalid-email':\r\n      message = ERROR_MESSAGES.INVALID_EMAIL;\r\n      break;\r\n    case 'auth/invalid-email-verified':\r\n      message = ERROR_MESSAGES.INVALID_EMAIL_VERIFIED;\r\n      break;\r\n    case 'auth/invalid-hash-algorithm':\r\n      message = ERROR_MESSAGES.INVALID_HASH_ALGORITHM;\r\n      break;\r\n    case 'auth/invalid-hash-block-size':\r\n      message = ERROR_MESSAGES.INVALID_HASH_BLOCK_SIZE;\r\n      break;\r\n    case 'auth/invalid-hash-derived-key-length':\r\n      message = ERROR_MESSAGES.INVALID_HASH_DERIVED_KEY_LEENGTH;\r\n      break;\r\n    case 'auth/invalid-hash-key':\r\n      message = ERROR_MESSAGES.INVALID_HASH_KEY;\r\n      break;\r\n    case 'auth/invalid-hash-memory-cost':\r\n      message = ERROR_MESSAGES.INVALID_HASH_MEMORY_COST;\r\n      break;\r\n    case 'auth/invalid-hash-parallelization':\r\n      message = ERROR_MESSAGES.INVALID_HASH_PARALLELIZATION;\r\n      break;\r\n    case 'auth/invalid-hash-rounds':\r\n      message = ERROR_MESSAGES.INVALID_HASH_ROUNDS;\r\n      break;\r\n    case 'auth/invalid-hash-salt-separator':\r\n      message = ERROR_MESSAGES.INVALID_HASH_SALT_SEPARATOR;\r\n      break;\r\n    case 'auth/invalid-id-token':\r\n      message = ERROR_MESSAGES.INVALID_ID_TOKEN;\r\n      break;\r\n    case 'auth/invalid-last-sign-in-time':\r\n      message = ERROR_MESSAGES.INVALID_LAST_SIGN_IN_TIME;\r\n      break;\r\n    case 'auth/invalid-page-token':\r\n      message = ERROR_MESSAGES.INVALID_PAGE_TOKEN;\r\n      break;\r\n    case 'auth/invalid-password':\r\n      message = ERROR_MESSAGES.INVALID_PASSWORD;\r\n      break;\r\n    case 'auth/invalid-password-hash':\r\n      message = ERROR_MESSAGES.INVALID_PASSWORD_HASH;\r\n      break;\r\n    case 'auth/invalid-password-salt':\r\n      message = ERROR_MESSAGES.INVALID_PASSWORD_SALT;\r\n      break;\r\n    case 'auth/invalid-phone-number':\r\n      message = ERROR_MESSAGES.INVALID_PHONE_NUMBER;\r\n      break;\r\n    case 'auth/invalid-photo-url':\r\n      message = ERROR_MESSAGES.INVALID_PHOTO_URL;\r\n      break;\r\n    case 'auth/invalid-provider-data':\r\n      message = ERROR_MESSAGES.INVALID_PROVIDER_DATA;\r\n      break;\r\n    case 'auth/invalid-provider-id':\r\n      message = ERROR_MESSAGES.INVALID_PROVIDER_ID;\r\n      break;\r\n    case 'auth/invalid-session-cookie-duration':\r\n      message = ERROR_MESSAGES.INVALID_SESSION_COOKIE_DURATION;\r\n      break;\r\n    case 'auth/invalid-uid':\r\n      message = ERROR_MESSAGES.INVALID_UID;\r\n      break;\r\n    case 'auth/invalid-user-import':\r\n      message = ERROR_MESSAGES.INVALID_USER_IMPORT;\r\n      break;\r\n    case 'auth/maximum-user-count-exceeded':\r\n      message = ERROR_MESSAGES.MAXIMUM_USER_COUNT_EXCEEDED;\r\n      break;\r\n    case 'auth/missing-android-pkg-name':\r\n      message = ERROR_MESSAGES.MISSING_ANDROID_PKG_NAME;\r\n      break;\r\n    case 'auth/missing-continue-uri':\r\n      message = ERROR_MESSAGES.MISSING_CONTINUE_URI;\r\n      break;\r\n    case 'auth/missing-hash-algorithm':\r\n      message = ERROR_MESSAGES.MISSING_HASH_ALGORITHM;\r\n      break;\r\n    case 'auth/missing-ios-bundle-id':\r\n      message = ERROR_MESSAGES.MISSING_IOS_BUNDLE_ID;\r\n      break;\r\n    case 'auth/missing-uid':\r\n      message = ERROR_MESSAGES.MISSING_UID;\r\n      break;\r\n    case 'auth/operation-not-allowed':\r\n      message = ERROR_MESSAGES.OPERATION_NOT_ALLOWED;\r\n      break;\r\n    case 'auth/phone-number-already-exists':\r\n      message = ERROR_MESSAGES.PHONE_NUMBER_ALREADY_EXISTS;\r\n      break;\r\n    case 'auth/project-not-found':\r\n      message = ERROR_MESSAGES.PROJECT_NOT_FOUND;\r\n      break;\r\n    case 'auth/reserved-claims':\r\n      message = ERROR_MESSAGES.RESERVED_CLAIMS;\r\n      break;\r\n    case 'auth/session-cookie-expired':\r\n      message = ERROR_MESSAGES.SESSION_COOKIE_EXPIRED;\r\n      break;\r\n    case 'auth/session-cookie-revoked':\r\n      message = ERROR_MESSAGES.SESSION_COOKIE_REVOKED;\r\n      break;\r\n    case 'auth/uid-already-exists':\r\n      message = ERROR_MESSAGES.UID_ALREADY_EXISTS;\r\n      break;\r\n    case 'auth/unauthorized-continue-uri':\r\n      message = ERROR_MESSAGES.UNAUTHORIZED_CONTINUE_URI;\r\n      break;\r\n    case 'auth/user-not-found':\r\n      message = ERROR_MESSAGES.USER_NOT_FOUND;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return message;\r\n};\r\n\r\nexport default getFirebaseErrorMessage;\r\n","export const AUTH_WEAK_PASSWORD = '6글자 이상의 비밀번호를 입력해주세요.';\r\nexport const EMAIL_ALREADY_IN_USE = '이미 존재하는 이메일 입니다.';\r\nexport const AUTH_WRONG_PASSWORD = '비밀번호가 일치하지 않습니다.';\r\nexport const TOO_MANY_REQUESTS =\r\n  '너무 많은 횟수로 비밀번호를 틀리셨습니다. 잠시후에 다시 시도해 주세요.';\r\nexport const CLAIMS_TOO_LARGE =\r\n  '클레임 페이로드가 최대 허용 크기인 1,000바이트를 초과합니다.';\r\nexport const EMAIL_ALREADY_EXIST = '이미 존재하는 이메일 입니다.';\r\nexport const ID_TOKEN_EXPIRED = '제공된 토큰이 만료되었습니다.';\r\nexport const ID_TOKEN_REVOKED = 'ID 토큰이 취소되었습니다.';\r\nexport const INSUFFICIENT_PERMISSION =\r\n  'Admin SDK 초기화에 사용된 사용자 인증 정보에는 요청한 인증 리소스에 액세스할 권한이 없습니다';\r\nexport const INTERNAL_ERROR =\r\n  '인증 서버에서 요청을 처리하려고 시도하는 중에 예기치 않은 오류가 발생했습니다.';\r\nexport const INVALID_ARGUMENT = '인증 메서드에 잘못된 인수가 제공되었습니다.';\r\nexport const INVALID_CLAIMS =\r\n  'setCustomUserClaims()에 제공된 커스텀 클레임 속성이 잘못되었습니다.';\r\nexport const INVALID_CONTINUE_URI =\r\n  '연결 URL은 올바른 URL 문자열이어야 합니다.';\r\nexport const INVALID_CREATION_TIME =\r\n  '생성 시간이 올바른 UTC 날짜 문자열이어야 합니다.';\r\nexport const INVALID_CREDENTIAL =\r\n  'Admin SDK 인증에 사용된 사용자 인증 정보로는 원하는 작업을 수행할 수 없습니다';\r\nexport const INVALID_DISABLE_FIELD =\r\n  'disabled 사용자 속성에 제공된 값이 잘못되었습니다. 이 값은 부울이어야 합니다.';\r\nexport const INVALID_DISPLAY_NAME =\r\n  'displayName 사용자 속성에 제공된 값이 잘못되었습니다. 이 값은 비어 있지 않은 문자열이어야 합니다.';\r\nexport const INVALID_DYNAMIC_LINK_DOMAIN =\r\n  '제공된 동적 링크 도메인이 구성되지 않거나 현재 프로젝트에 대해 승인되지 않았습니다.';\r\nexport const INVALID_EMAIL =\r\n  '존재하지 않는 이메일이거나 이메일의 올바른 형식이 아닙니다.';\r\nexport const INVALID_EMAIL_VERIFIED =\r\n  'emailVerified 사용자 속성에 제공된 값이 잘못되었습니다. 이 값은 부울이어야 합니다.';\r\nexport const INVALID_HASH_ALGORITHM =\r\n  '해시 알고리즘이 지원되는 알고리즘 목록의 문자열 중 하나와 일치해야 합니다.';\r\nexport const INVALID_HASH_BLOCK_SIZE =\r\n  '해시 블록 크기가 올바른 숫자여야 합니다.';\r\nexport const INVALID_HASH_DERIVED_KEY_LEENGTH =\r\n  '해시에서 파생된 키 길이가 올바른 숫자여야 합니다.';\r\nexport const INVALID_HASH_KEY = '해시 키가 올바른 바이트 버퍼여야 합니다.';\r\nexport const INVALID_HASH_MEMORY_COST =\r\n  '해시 메모리 비용이 올바른 숫자여야 합니다.';\r\nexport const INVALID_HASH_PARALLELIZATION =\r\n  '해시 병렬 처리가 올바른 숫자여야 합니다.';\r\nexport const INVALID_HASH_ROUNDS = '해시 라운드가 올바른 숫자여야 합니다.';\r\nexport const INVALID_HASH_SALT_SEPARATOR =\r\n  '해싱 알고리즘 솔트 구분자 필드가 올바른 바이트 버퍼여야 합니다.';\r\nexport const INVALID_ID_TOKEN =\r\n  '제공된 ID 토큰이 올바른 데이터베이스 토큰이 아닙니다.';\r\nexport const INVALID_LAST_SIGN_IN_TIME =\r\n  '마지막 로그인 시간이 올바른 UTC 날짜 문자열이어야 합니다.';\r\nexport const INVALID_PAGE_TOKEN =\r\n  'listUsers()에 제공된 다음 페이지 토큰이 잘못되었습니다. 비어 있지 않은 유효한 문자열이어야 합니다.';\r\nexport const INVALID_PASSWORD =\r\n  '비밀번호가 다릅니다. 이 값은 6글자 이상이어야 합니다.';\r\nexport const INVALID_PASSWORD_HASH =\r\n  '비밀번호 해시가 올바른 바이트 버퍼여야 합니다.';\r\nexport const INVALID_PASSWORD_SALT =\r\n  '비밀번호 솔트가 올바른 바이트 버퍼여야 합니다.';\r\nexport const INVALID_PHONE_NUMBER =\r\n  'phoneNumber에 제공된 값이 잘못되었습니다. 이 값은 E.164 표준과 호환되는 비어 있지 않은 식별자 문자열이어야 합니다.';\r\nexport const INVALID_PHOTO_URL =\r\n  'photoURL 사용자 속성에 제공된 값이 잘못되었습니다. 이 값은 문자열 URL이어야 합니다.';\r\nexport const INVALID_PROVIDER_DATA =\r\n  'providerData가 올바른 UserInfo 객체 배열이어야 합니다.';\r\nexport const INVALID_PROVIDER_ID =\r\n  'providerId가 지원되는 올바른 제공업체 식별자 문자열이어야 합니다.';\r\nexport const INVALID_SESSION_COOKIE_DURATION =\r\n  '세션 쿠키 기간이 5분에서 2주 사이의 올바른 밀리초 단위 숫자여야 합니다.';\r\nexport const INVALID_UID =\r\n  '제공된 uid는 128자(영문 기준) 이하의 비어 있지 않은 문자열이어야 합니다.';\r\nexport const INVALID_USER_IMPORT = '가져올 사용자 레코드가 잘못되었습니다.';\r\nexport const MAXIMUM_USER_COUNT_EXCEEDED =\r\n  '가져올 수 있는 최대 사용자 수를 초과했습니다.';\r\nexport const MISSING_ANDROID_PKG_NAME =\r\n  'Android 앱을 설치해야 할 경우 Android 패키지 이름을 제공해야 합니다.';\r\nexport const MISSING_CONTINUE_URI = '요청에 올바른 연결 URL을 제공해야 합니다.';\r\nexport const MISSING_HASH_ALGORITHM =\r\n  '비밀번호 해시를 사용해 사용자를 가져오려면 해싱 알고리즘 및 매개변수를 제공해야 합니다.';\r\nexport const MISSING_IOS_BUNDLE_ID = '요청에 iOS 번들 ID가 누락되었습니다.';\r\nexport const MISSING_UID = '현재 작업에 uid 식별자가 필요합니다.';\r\nexport const OPERATION_NOT_ALLOWED =\r\n  '제공된 로그인 제공업체가 Firebase 프로젝트에서 사용 중지되었습니다. Firebase Console의 로그인 방법 섹션에서 사용 설정하세요.';\r\nexport const PHONE_NUMBER_ALREADY_EXISTS =\r\n  '제공된 phoneNumber을 기존 사용자가 이미 사용 중입니다. 각 사용자마다 phoneNumber가 고유해야 합니다.';\r\nexport const PROJECT_NOT_FOUND =\r\n  'Admin SDK를 초기화하는 데 사용한 사용자 인증 정보에 해당하는 Firebase 프로젝트가 없습니다.';\r\nexport const RESERVED_CLAIMS =\r\n  'setCustomUserClaims()에 제공된 하나 이상의 커스텀 사용자 클레임이 예약되어 있습니다.';\r\nexport const SESSION_COOKIE_EXPIRED =\r\n  '제공된 Firebase 세션 쿠키가 만료되었습니다.';\r\nexport const SESSION_COOKIE_REVOKED = 'Firebase 세션 쿠키가 취소되었습니다.';\r\nexport const UID_ALREADY_EXISTS =\r\n  '제공된 uid를 기존 사용자가 이미 사용하고 있습니다. 각 사용자마다 uid가 고유해야 합니다.';\r\nexport const UNAUTHORIZED_CONTINUE_URI =\r\n  '연결 URL의 도메인이 허용 목록에 포함되어 있지 않습니다. Firebase Console에서 도메인을 허용해야 합니다.';\r\nexport const USER_NOT_FOUND =\r\n  '제공된 식별자에 해당하는 기존 사용자 레코드가 없습니다.';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport Logo from '../image/softwareLogo_origin.png';\r\nimport '../Pages/Fadeout.css';\r\nimport { Mobile, Default } from '../MediaQuery';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-contents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst LoginMobile = (props) => {\r\n  const { LoginSubmit, onIdHandler, onPasswordHanlder, toSignUp } = props;\r\n  return (\r\n    <Container>\r\n      <img\r\n        src={Logo}\r\n        alt=\"logo\"\r\n        width=\"150vw\"\r\n        style={{ margin: '10vh 0 0 ' }}\r\n      />\r\n      <p\r\n        style={{\r\n          fontSize: '3vh',\r\n          fontWeight: 'bold',\r\n          letterSpacing: '3vw',\r\n          borderBottom: '2px solid black',\r\n          margin: '1.5rem 0 0',\r\n        }}\r\n      >\r\n        SEJONG UNIV\r\n      </p>\r\n      <p\r\n        style={{\r\n          fontSize: '2vh',\r\n          fontWeight: 'bolder',\r\n          letterSpacing: '2vw',\r\n          margin: '0.3rem 0 2rem',\r\n        }}\r\n      >\r\n        소프트웨어학과 사물함\r\n      </p>\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={LoginSubmit}\r\n        style={{\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flexDirection: 'column',\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <TextField\r\n          id=\"id\"\r\n          label=\"ID\"\r\n          variant=\"outlined\"\r\n          onChange={onIdHandler}\r\n          style={{ width: '80vw', margin: '1vh 0' }}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          onChange={onPasswordHanlder}\r\n          style={{ width: '80vw', margin: '1vh 0' }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          style={{\r\n            width: '80vw',\r\n            height: '3.5rem',\r\n            backgroundColor: 'rgb(63,81,181)',\r\n            color: 'white',\r\n            border: '1px solid rgb(63,81,181)',\r\n            margin: '1vh',\r\n          }}\r\n        >\r\n          로그인\r\n        </Button>\r\n      </form>\r\n      <div\r\n        style={{\r\n          display: 'inline-block',\r\n          margin: '1rem 0 0',\r\n        }}\r\n      >\r\n        계정이 없으신가요?\r\n        <Button\r\n          onClick={toSignUp}\r\n          style={{\r\n            color: '#0500FF',\r\n            backgroundColor: 'transparent',\r\n            fontSize: '1rem',\r\n          }}\r\n        >\r\n          가입하기\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nLoginMobile.propTypes = {\r\n  LoginSubmit: PropTypes.func.isRequired,\r\n  onIdHandler: PropTypes.func.isRequired,\r\n  onPasswordHanlder: PropTypes.func.isRequired,\r\n  toSignUp: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LoginMobile;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { auth } from '../configs/firebase.config';\r\nimport Login from '../Pages/Login';\r\nimport getFirebaseErrorMessage from '../utils/error/auth/authError';\r\nimport LoginMobile from '../Mobile/LoginMobile';\r\nimport { Mobile, Default } from '../MediaQuery';\r\n\r\nconst LoginContainer = () => {\r\n  const history = useHistory();\r\n  const [_id, setId] = useState('');\r\n  const [_password, setPassword] = useState('');\r\n  const userId = useSelector((state) => state.auth.currentUser.uid);\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n  const toMainPage = () => {\r\n    history.push('/main');\r\n  };\r\n  const LoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(_id, _password)\r\n      .then(() => {\r\n        toMainPage();\r\n      })\r\n      .catch((err) => {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: '로그인 실패',\r\n          text: getFirebaseErrorMessage(err.code),\r\n          showConfirmButton: true,\r\n          width: '25rem',\r\n          timer: 2000,\r\n        });\r\n      });\r\n  };\r\n\r\n  const toSignUp = () => {\r\n    history.push('/signup');\r\n  };\r\n  return (\r\n    <>\r\n      {userId ? (\r\n        toMainPage()\r\n      ) : (\r\n        <>\r\n          <Default>\r\n            <Login\r\n              LoginSubmit={LoginSubmit}\r\n              onIdHandler={onIdHandler}\r\n              onPasswordHanlder={onPasswordHanlder}\r\n              toSignUp={toSignUp}\r\n            />\r\n          </Default>\r\n          <Mobile>\r\n            <LoginMobile\r\n              LoginSubmit={LoginSubmit}\r\n              onIdHandler={onIdHandler}\r\n              onPasswordHanlder={onPasswordHanlder}\r\n              toSignUp={toSignUp}\r\n            />\r\n          </Mobile>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginContainer;\r\n","export default __webpack_public_path__ + \"static/media/Backward.9541f32e.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport { TextField, Button, makeStyles, Img } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Logo from '../image/softwareLogo_origin.png';\r\nimport { Mobile, Default } from '../MediaQuery';\r\nimport './Fadeout.css';\r\nimport backwards from '../image/Backward.png';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-contents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 98vh;\r\n`;\r\n\r\nconst MobileDivider = styled.div`\r\n  border-bottom: 2px solid lightgray;\r\n  width: 85%;\r\n  margin: 5vh 1vw;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backwards: {\r\n    opacity: 0.6,\r\n\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n      opacity: 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SignUp = (props) => {\r\n  const {\r\n    SignUpSubmit,\r\n    linktoLogin,\r\n    onIdHandler,\r\n    onPasswordHandler,\r\n    onStudentIdHandler,\r\n    onNameHandler,\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <CSSTransitionGroup\r\n      transitionName=\"homeTransition\"\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n      transitionEnter={false}\r\n      transitionLeave={false}\r\n    >\r\n      <Container>\r\n        <Default>\r\n          <img\r\n            src={Logo}\r\n            alt=\"logo\"\r\n            width=\"80vw\"\r\n            style={{ margin: '1vh 0 0 ' }}\r\n          />\r\n\r\n          <p\r\n            style={{\r\n              fontSize: '0.8vw',\r\n              fontWeight: 'bold',\r\n              letterSpacing: '0.5vw',\r\n              borderBottom: '0.1vw solid black',\r\n              margin: '0.7rem 0 0',\r\n            }}\r\n          >\r\n            SEJONG UNIV\r\n          </p>\r\n          <p\r\n            style={{\r\n              fontSize: '0.6vw',\r\n              fontWeight: 'bolder',\r\n              letterSpacing: '0.4vw',\r\n              margin: '0.15rem 0 2rem',\r\n            }}\r\n          >\r\n            소프트웨어학과 사물함\r\n          </p>\r\n          <form\r\n            onSubmit={SignUpSubmit}\r\n            noValidate\r\n            name=\"signUp\"\r\n            autoComplete=\"off\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              flexDirection: 'column',\r\n              display: 'flex',\r\n              borderTop: '3px solid lightgray',\r\n              borderBottom: '3px solid lightgray',\r\n              padding: '2vh 5vw 6vh',\r\n              borderRadius: '2rem',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: 'inline-flex',\r\n                flexDirection: 'row',\r\n                width: '100%',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  position: 'absolute',\r\n                  backgroundColor: 'transparent',\r\n                  width: 'auto',\r\n                }}\r\n                onClick={linktoLogin}\r\n                className={classes.backwards}\r\n              >\r\n                <img\r\n                  src={backwards}\r\n                  alt=\"toLogin\"\r\n                  width=\"20rem\"\r\n                  style={{ margin: '2vh 1vw auto 0' }}\r\n                />\r\n              </Button>\r\n              <div style={{ width: '100%' }}>\r\n                <p\r\n                  style={{\r\n                    fontSize: '2.5rem',\r\n                    fontWeight: 'bold',\r\n                    letterSpacing: '0.1vw',\r\n                    marginTop: '1vh',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  회원가입\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <TextField\r\n              id=\"id\"\r\n              label=\"Email\"\r\n              placeholder=\"aaa@example.com 형식으로 입력해주세요.\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              onChange={onIdHandler}\r\n              style={{ width: '30vw', margin: '1.5vh' }}\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"6글자 이상의 패스워드를 입력해주세요.\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              onChange={onPasswordHandler}\r\n              style={{ width: '30vw', margin: '1.5vh' }}\r\n            />\r\n            <TextField\r\n              id=\"studentID\"\r\n              label=\"학번\"\r\n              placeholder=\"학번을 입력해주세요.\"\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              onChange={onStudentIdHandler}\r\n              style={{ width: '30vw', margin: '1.5vh' }}\r\n            />\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"이름\"\r\n              placeholder=\"이름을 입력해주세요.\"\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              onChange={onNameHandler}\r\n              style={{ width: '30vw', margin: '1.5vh' }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              style={{\r\n                width: '30vw',\r\n                height: '5vh',\r\n                backgroundColor: 'rgb(63,81,181)',\r\n                color: 'white',\r\n                border: '1px solid rgb(63,81,181)',\r\n                marginTop: '1vh',\r\n              }}\r\n            >\r\n              회원가입\r\n            </Button>\r\n          </form>\r\n        </Default>\r\n\r\n        {/* <Mobile style={{ textalign: 'center' }}>\r\n          <img\r\n            src={Logo}\r\n            alt=\"logo\"\r\n            width=\"80vw\"\r\n            style={{ margin: '2vh 0 0' }}\r\n          />\r\n          <p\r\n            style={{\r\n              fontSize: '1rem',\r\n              fontWeight: 'bold',\r\n              letterSpacing: '0.5vw',\r\n              borderBottom: '0.1vw solid black',\r\n              margin: '0.7rem 0 0',\r\n            }}\r\n          >\r\n            SEJONG UNIV\r\n          </p>\r\n          <p\r\n            style={{\r\n              fontSize: '0.8rem',\r\n              fontWeight: 'bolder',\r\n              letterSpacing: '0.4vw',\r\n              margin: '0.15rem 0 0',\r\n            }}\r\n          >\r\n            소프트웨어학과 사물함\r\n          </p>\r\n\r\n          <form\r\n            onSubmit={SignUpSubmit}\r\n            name=\"signUp\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              flexDirection: 'column',\r\n              display: 'flex',\r\n              margin: '0.5vh 0',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: 'inline-flex',\r\n                flexDirection: 'row',\r\n                width: '100%',\r\n                marginTop: '1rem',\r\n                borderTop: '2px solid lightgray',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  position: 'absolute',\r\n                  height: 'auto',\r\n                }}\r\n                onClick={linktoLogin}\r\n                className={classes.backwards}\r\n              >\r\n                <img\r\n                  src={backwards}\r\n                  alt=\"toLogin\"\r\n                  width=\"9vw\"\r\n                  style={{ margin: '5vh 8vw auto 0' }}\r\n                />\r\n              </Button>\r\n\r\n              <div style={{ width: '100%' }}>\r\n                <p\r\n                  style={{\r\n                    fontSize: '4vh',\r\n                    fontWeight: 'bold',\r\n                    width: '100%',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  회원가입\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <TextField\r\n              id=\"id\"\r\n              label=\"Email\"\r\n              placeholder=\"이메일 형식으로 입력해주세요\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              onChange={onIdHandler}\r\n              style={{ width: '80vw', margin: '1vh 0.1vw' }}\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"6글자 이상의 패스워드를 입력해주세요.\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              onChange={onPasswordHandler}\r\n              style={{ width: '80vw', margin: '1vh 0.1vw' }}\r\n            />\r\n            <TextField\r\n              id=\"studentID\"\r\n              label=\"학번\"\r\n              placeholder=\"학번을 입력해주세요.\"\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              onChange={onStudentIdHandler}\r\n              style={{ width: '80vw', margin: '1vh 0.1vw' }}\r\n            />\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"이름\"\r\n              placeholder=\"이름을 입력해주세요.\"\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              onChange={onNameHandler}\r\n              style={{ width: '80vw', margin: '1vh 0.1vw' }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              style={{\r\n                width: '80vw',\r\n                height: '2.5rem',\r\n                backgroundColor: 'rgb(63,81,181)',\r\n                color: 'white',\r\n                border: '1px solid rgb(63,81,181)',\r\n                marginTop: '1vh',\r\n              }}\r\n            >\r\n              회원가입\r\n            </Button>\r\n          </form>\r\n          <MobileDivider />\r\n        </Mobile> */}\r\n      </Container>\r\n    </CSSTransitionGroup>\r\n  );\r\n};\r\n\r\nSignUp.propTypes = {\r\n  SignUpSubmit: PropTypes.func.isRequired,\r\n  linktoLogin: PropTypes.func.isRequired,\r\n  onIdHandler: PropTypes.func.isRequired,\r\n  onPasswordHandler: PropTypes.func.isRequired,\r\n  onStudentIdHandler: PropTypes.func.isRequired,\r\n  onNameHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport { TextField, Button, makeStyles, Img } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Logo from '../image/softwareLogo_origin.png';\r\nimport { Mobile, Default } from '../MediaQuery';\r\nimport '../Pages/Fadeout.css';\r\nimport backwards from '../image/Backward.png';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-contents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 98vh;\r\n`;\r\n\r\nconst MobileDivider = styled.div`\r\n  border-bottom: 2px solid lightgray;\r\n  width: 85%;\r\n  margin: 5vh 1vw;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backwards: {\r\n    opacity: 0.6,\r\n\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n      opacity: 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SignUpMobile = (props) => {\r\n  const {\r\n    SignUpSubmit,\r\n    linktoLogin,\r\n    onIdHandler,\r\n    onPasswordHandler,\r\n    onStudentIdHandler,\r\n    onNameHandler,\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <CSSTransitionGroup\r\n      transitionName=\"homeTransition\"\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n      transitionEnter={false}\r\n      transitionLeave={false}\r\n    >\r\n      <Container>\r\n        <img src={Logo} alt=\"logo\" width=\"80vw\" style={{ margin: '2vh 0 0' }} />\r\n        <p\r\n          style={{\r\n            fontSize: '1rem',\r\n            fontWeight: 'bold',\r\n            letterSpacing: '0.5vw',\r\n            borderBottom: '0.1vw solid black',\r\n            margin: '0.7rem 0 0',\r\n          }}\r\n        >\r\n          SEJONG UNIV\r\n        </p>\r\n        <p\r\n          style={{\r\n            fontSize: '0.8rem',\r\n            fontWeight: 'bolder',\r\n            letterSpacing: '0.4vw',\r\n            margin: '0.15rem 0 0',\r\n          }}\r\n        >\r\n          소프트웨어학과 사물함\r\n        </p>\r\n\r\n        <form\r\n          onSubmit={SignUpSubmit}\r\n          name=\"signUp\"\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          style={{\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            display: 'flex',\r\n            margin: '0.5vh 0',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'inline-flex',\r\n              flexDirection: 'row',\r\n              width: '100%',\r\n              marginTop: '1rem',\r\n              borderTop: '2px solid lightgray',\r\n            }}\r\n          >\r\n            <Button\r\n              style={{\r\n                position: 'absolute',\r\n                height: 'auto',\r\n              }}\r\n              onClick={linktoLogin}\r\n              className={classes.backwards}\r\n            >\r\n              <img\r\n                src={backwards}\r\n                alt=\"toLogin\"\r\n                width=\"9vw\"\r\n                style={{ margin: '5vh 8vw auto 0' }}\r\n              />\r\n            </Button>\r\n\r\n            <div style={{ width: '100%' }}>\r\n              <p\r\n                style={{\r\n                  fontSize: '4vh',\r\n                  fontWeight: 'bold',\r\n                  width: '100%',\r\n                  textAlign: 'center',\r\n                }}\r\n              >\r\n                회원가입\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <TextField\r\n            id=\"id\"\r\n            label=\"Email\"\r\n            placeholder=\"이메일 형식으로 입력해주세요\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            onChange={onIdHandler}\r\n            style={{ width: '80vw', margin: '1vh 0.1vw' }}\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            placeholder=\"6글자 이상의 패스워드를 입력해주세요.\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            onChange={onPasswordHandler}\r\n            style={{ width: '80vw', margin: '1vh 0.1vw' }}\r\n          />\r\n          <TextField\r\n            id=\"studentID\"\r\n            label=\"학번\"\r\n            placeholder=\"학번을 입력해주세요.\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            onChange={onStudentIdHandler}\r\n            style={{ width: '80vw', margin: '1vh 0.1vw' }}\r\n          />\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"이름\"\r\n            placeholder=\"이름을 입력해주세요.\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            onChange={onNameHandler}\r\n            style={{ width: '80vw', margin: '1vh 0.1vw' }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            style={{\r\n              width: '80vw',\r\n              height: '2.5rem',\r\n              backgroundColor: 'rgb(63,81,181)',\r\n              color: 'white',\r\n              border: '1px solid rgb(63,81,181)',\r\n              marginTop: '1vh',\r\n            }}\r\n          >\r\n            회원가입\r\n          </Button>\r\n        </form>\r\n        <MobileDivider />\r\n      </Container>\r\n    </CSSTransitionGroup>\r\n  );\r\n};\r\n\r\nSignUpMobile.propTypes = {\r\n  SignUpSubmit: PropTypes.func.isRequired,\r\n  linktoLogin: PropTypes.func.isRequired,\r\n  onIdHandler: PropTypes.func.isRequired,\r\n  onPasswordHandler: PropTypes.func.isRequired,\r\n  onStudentIdHandler: PropTypes.func.isRequired,\r\n  onNameHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SignUpMobile;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { auth, database } from '../configs/firebase.config';\r\nimport SignUp from '../Pages/SignUp';\r\nimport SignUpMobile from '../Mobile/SignUpMobile';\r\nimport { Mobile, Default } from '../MediaQuery';\r\nimport { setCurrentUserNameAndID } from '../redux/auth/auth.reducer';\r\nimport getFirebaseErrorMessage from '../utils/error/auth/authError';\r\n\r\nconst SIgnUpContainer = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [_id, setId] = useState('');\r\n  const [_password, setPassword] = useState('');\r\n  const [studentId, setStudentId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const onIdHandler = (e) => {\r\n    setId(e.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n  const onStudentIdHandler = (e) => {\r\n    setStudentId(e.currentTarget.value);\r\n  };\r\n  const onNameHandler = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n\r\n  const linktoLogin = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  const writeUserData = (userId, studentID, _name) => {\r\n    database.ref(`users/${userId}`).set({\r\n      studentID,\r\n      name: _name,\r\n      cabinetIdx: 0,\r\n      cabinetTitle: 0,\r\n      adminType: 0,\r\n    });\r\n  };\r\n\r\n  const SignUpSubmit = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(_id, _password)\r\n      .then((user) => {\r\n        history.push('/main');\r\n        writeUserData(user.user.uid, studentId, name);\r\n        dispatch(setCurrentUserNameAndID({ studentId, name }));\r\n      })\r\n      .catch((err) => {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: '회원가입 실패',\r\n          text: getFirebaseErrorMessage(err.code),\r\n          showConfirmButton: true,\r\n          width: '25rem',\r\n          timer: 2000,\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Default>\r\n        <SignUp\r\n          SignUpSubmit={SignUpSubmit}\r\n          linktoLogin={linktoLogin}\r\n          onIdHandler={onIdHandler}\r\n          onPasswordHandler={onPasswordHandler}\r\n          onStudentIdHandler={onStudentIdHandler}\r\n          onNameHandler={onNameHandler}\r\n        />\r\n      </Default>\r\n      <Mobile>\r\n        <SignUpMobile\r\n          SignUpSubmit={SignUpSubmit}\r\n          linktoLogin={linktoLogin}\r\n          onIdHandler={onIdHandler}\r\n          onPasswordHandler={onPasswordHandler}\r\n          onStudentIdHandler={onStudentIdHandler}\r\n          onNameHandler={onNameHandler}\r\n        />\r\n      </Mobile>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SIgnUpContainer;\r\n","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core/';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Mobile, Default } from '../MediaQuery';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: 'RGB(240,240,240)',\r\n    transform: 'translateZ(0)',\r\n    '@media all and (-ms-high-contrast: none)': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    padding: theme.spacing(1),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    width: '28vw',\r\n    backgroundColor: 'RGB(250,250,250)',\r\n    border: 'none',\r\n    borderRadius: '0.3vw',\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  mpaper: {\r\n    width: '70vw',\r\n    height: '30vh',\r\n    backgroundColor: 'RGB(250,250,250)',\r\n    border: 'none',\r\n    borderRadius: '5vw',\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst ServerLoadingPage = () => {\r\n  const classes = useStyles();\r\n  const rootRef = React.useRef(null);\r\n  return (\r\n    <div>\r\n      <Default>\r\n        <div className={classes.root} ref={rootRef} style={{ height: '100vh' }}>\r\n          <Modal\r\n            disablePortal\r\n            disableEnforceFocus\r\n            disableAutoFocus\r\n            open\r\n            aria-labelledby=\"server-modal-title\"\r\n            aria-describedby=\"server-modal-description\"\r\n            className={classes.modal}\r\n            container={() => rootRef.current}\r\n          >\r\n            <div\r\n              className={classes.paper}\r\n              style={{\r\n                flexDirection: 'row',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <div style={{ fontSize: '1vw' }}>\r\n                <h2 id=\"server-modal-title\">현재 서버가 닫혀있습니다.</h2>\r\n                <p id=\"server-modal-description\">\r\n                  관리자가 서버가 열 때 까지 잠시 기다려주세요.\r\n                </p>\r\n              </div>\r\n              <div style={{ paddingLeft: '4vw' }}>\r\n                <CircularProgress size=\"3.5vw\" color=\"black\" />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </Default>\r\n      <Mobile>\r\n        <div className={classes.root} ref={rootRef} style={{ height: '100vh' }}>\r\n          <Modal\r\n            disablePortal\r\n            disableEnforceFocus\r\n            disableAutoFocus\r\n            open\r\n            aria-labelledby=\"server-modal-title\"\r\n            aria-describedby=\"server-modal-description\"\r\n            className={classes.modal}\r\n            container={() => rootRef.current}\r\n            style={{ marginBottom: '20vh' }}\r\n          >\r\n            <div\r\n              className={classes.mpaper}\r\n              style={{\r\n                flexDirection: 'column',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <div style={{ margin: '3vh 0' }}>\r\n                <CircularProgress size=\"8vh\" color=\"black\" />\r\n              </div>\r\n              <div style={{ padding: '2vh 0', fontSize: '1.5vh' }}>\r\n                <h2 id=\"server-modal-title\">현재 서버가 닫혀있습니다.</h2>\r\n                <p id=\"server-modal-description\">\r\n                  관리자가 서버가 열 때 까지 잠시 기다려주세요.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </Mobile>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServerLoadingPage;\r\n","import React from 'react';\r\nimport { CircularProgress, Backdrop } from '@material-ui/core/';\r\nimport { Mobile, Default } from '../MediaQuery';\r\n\r\nconst LoadingPage = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '100%',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Mobile>\r\n        <div style={{ marginTop: '50%' }}>\r\n          <center>\r\n            <CircularProgress size=\"50vw\" />\r\n          </center>\r\n        </div>\r\n      </Mobile>\r\n      <Default>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            position: 'static',\r\n            height: '100%',\r\n          }}\r\n        >\r\n          <div style={{ marginTop: '30vh' }}>\r\n            <CircularProgress size=\"15vw\" />\r\n          </div>\r\n        </div>\r\n      </Default>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport {\r\n  Button,\r\n  FormControlLabel,\r\n  Grid,\r\n  makeStyles,\r\n  Switch,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport { Default, Mobile } from '../MediaQuery';\r\n\r\nconst Content = styled.div`\r\n  font-family: 'Anton';\r\n  width: 100%;\r\n`;\r\n\r\nconst MContent = styled.div`\r\n  font-family: 'Anton';\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 4vh 0 4vh 4vw;\r\n`;\r\n\r\nconst StatusValue = styled.div`\r\n  margin: 0 1vw 0 1vw;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 'auto',\r\n    overflow: 'hidden',\r\n  },\r\n\r\n  mroot: {\r\n    width: '50vw',\r\n    overflow: 'scroll',\r\n  },\r\n  button: {\r\n    border: '3px solid #00d145',\r\n    padding: theme.spacing(1),\r\n    fontFamily: 'Anton',\r\n    width: '5.5vw',\r\n    textAlign: 'center',\r\n    fontSize: '1vw',\r\n    color: 'rgb(30,30,30)',\r\n    '&:hover': {\r\n      backgroundColor: '#00d145',\r\n      color: 'white',\r\n    },\r\n    '&:active': {\r\n      backgroundColor: '#00d145',\r\n      color: 'white',\r\n    },\r\n    '&:target': {\r\n      backgroundColor: '#00d145',\r\n      color: 'white',\r\n    },\r\n    '&:focus': {\r\n      backgroundColor: '#00d145',\r\n      color: 'white',\r\n    },\r\n  },\r\n  button2: {\r\n    fontFamily: 'Anton',\r\n    border: '3px solid lightgray',\r\n    padding: theme.spacing(1),\r\n    width: '5.5vw',\r\n    color: 'gray',\r\n    fontWeight: 'bold',\r\n    fontSize: '1vw',\r\n    backgroundColor: 'lightgray',\r\n    cursor: 'default',\r\n    '&:hover': {\r\n      backgroundColor: 'lightgray',\r\n    },\r\n  },\r\n  button3: {\r\n    fontFamily: 'Anton',\r\n    border: '3px solid lightgray',\r\n    padding: theme.spacing(1),\r\n    width: '5.5vw',\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: '1vw',\r\n    backgroundColor: 'lightgray',\r\n  },\r\n  button4: {\r\n    fontFamily: 'Anton',\r\n    border: '3px solid #008000',\r\n    padding: theme.spacing(1),\r\n    width: '5.5vw',\r\n    fontWeight: 'bold',\r\n    fontSize: '1vw',\r\n    backgroundColor: '#008000',\r\n    '&:hover': {\r\n      backgroundColor: '#DF1840',\r\n      color: 'white',\r\n      border: '3px solid #DF1840',\r\n    },\r\n    '&:focus': {\r\n      backgroundColor: '#DF1840',\r\n      color: 'white',\r\n      border: '3px solid #DF1840',\r\n    },\r\n  },\r\n  Mbutton: {\r\n    border: '2px solid #00d145',\r\n    fontFamily: 'Anton',\r\n    borderRadius: '5px',\r\n    margin: '0 1rem',\r\n    backgroundColor: 'white',\r\n    width: '2rem',\r\n    height: '2rem',\r\n    fontSize: '12px',\r\n    outline: 'none',\r\n    color: 'rgb(30,30,30)',\r\n\r\n    '&:hover': {\r\n      backgroundColor: '#00d145',\r\n      color: 'white',\r\n    },\r\n    '&:active': {\r\n      backgroundColor: '#00d145',\r\n      color: 'white',\r\n    },\r\n    '&:target': {\r\n      backgroundColor: '#00d145',\r\n      color: 'white',\r\n    },\r\n    '&:focus': {\r\n      backgroundColor: '#00d145',\r\n      color: 'white',\r\n      outline: 'none',\r\n    },\r\n  },\r\n  Mbutton2: {\r\n    border: '2px solid lightgray',\r\n    fontFamily: 'Anton',\r\n    width: '2rem',\r\n    margin: '0 1rem',\r\n    height: '2rem',\r\n    color: 'white',\r\n    fontSize: '12px',\r\n    outline: 'none',\r\n    backgroundColor: 'lightgray',\r\n    borderRadius: '3px',\r\n  },\r\n  Mbutton3: {\r\n    fontFamily: 'Anton',\r\n    borderRadius: '4px',\r\n    border: '2px solid lightgray',\r\n    color: 'white',\r\n    margin: '0 1rem',\r\n    height: '2rem',\r\n    width: '2rem',\r\n    textAlign: 'center',\r\n    fontSize: '8px',\r\n    backgroundColor: 'lightgray',\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  Mbutton4: {\r\n    fontFamily: 'Anton',\r\n    borderRadius: '3px',\r\n    border: '2px solid #008000',\r\n    color: 'white',\r\n    margin: '0 1rem',\r\n    height: '2rem',\r\n    width: '2rem',\r\n    fontSize: '10px',\r\n    backgroundColor: '#008000',\r\n    '&:hover': {\r\n      backgroundColor: '#DF1840',\r\n      color: 'white',\r\n      border: '2px solid #DF1840',\r\n      outline: 'none',\r\n    },\r\n    '&:focus': {\r\n      backgroundColor: '#DF1840',\r\n      color: 'white',\r\n      border: '2px solid #DF1840',\r\n      outline: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Cabinet = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    data: { title, width, height, item },\r\n    select,\r\n    setSelect,\r\n    cabinetNum,\r\n    cabinetEnroll,\r\n    currentUserID,\r\n    cabinetCancel,\r\n    adminType,\r\n    cabinetBreakDown,\r\n    cabinetFix,\r\n  } = props;\r\n  const onClickFunc = () => {\r\n    console.log(adminType, item[select]);\r\n    if (adminType && item[select] === 0) {\r\n      cabinetBreakDown(cabinetNum);\r\n    } else if (adminType && item[select] === 2) {\r\n      cabinetFix(cabinetNum);\r\n    } else if (item[select] !== currentUserID) {\r\n      cabinetEnroll(cabinetNum);\r\n    } else {\r\n      cabinetCancel();\r\n    }\r\n  };\r\n  const [count, setCount] = useState([0, 0, 0]);\r\n  const [toggle, setToggle] = useState(false);\r\n  const toggleChange = (event) => {\r\n    setToggle(event.target.checked);\r\n  };\r\n  useEffect(() => {\r\n    const newCount = [0, 0, 0];\r\n    for (let i = 1; i < item.length; i += 1) {\r\n      if (item[i] === 0) {\r\n        newCount[0] += 1;\r\n      } else if (item[i] === 2) {\r\n        newCount[2] += 1;\r\n      } else {\r\n        newCount[1] += 1;\r\n      }\r\n    }\r\n    setCount(newCount);\r\n  }, [item]);\r\n  const loadGridRow = (i) => {\r\n    return [...Array(width)].map((v, index) => {\r\n      const arrIdx = i * width + index + 1;\r\n      if (item[arrIdx] === 0) {\r\n        return (\r\n          <Grid item xs={1} key={arrIdx}>\r\n            <Button\r\n              className={classes.button}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setSelect(arrIdx);\r\n              }}\r\n            >\r\n              {arrIdx}\r\n            </Button>\r\n          </Grid>\r\n        );\r\n      }\r\n      if (item[arrIdx] === 2) {\r\n        return (\r\n          <Grid item xs={1} key={arrIdx}>\r\n            <Button\r\n              className={classes.button3}\r\n              disabled={!adminType}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setSelect(arrIdx);\r\n              }}\r\n            >\r\n              🚧\r\n            </Button>\r\n          </Grid>\r\n        );\r\n      }\r\n      if (item[arrIdx] === currentUserID) {\r\n        return (\r\n          <Grid item xs={1} key={arrIdx}>\r\n            <Button\r\n              className={classes.button4}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setSelect(arrIdx);\r\n              }}\r\n              disabled={adminType}\r\n            >\r\n              <CheckOutlinedIcon style={{ fontSize: '1.7vw' }} />\r\n            </Button>\r\n          </Grid>\r\n        );\r\n      }\r\n      return (\r\n        <Grid item xs={1} key={arrIdx}>\r\n          <Tooltip\r\n            title={<div style={{ fontSize: '0.8rem' }}>{item[arrIdx]}</div>}\r\n            fontSize=\"5vw\"\r\n            arrow\r\n          >\r\n            <Button className={classes.button2} disableRipple>\r\n              {toggle ? item[arrIdx] : arrIdx}\r\n            </Button>\r\n          </Tooltip>\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  const MloadGridRow = (i) => {\r\n    return [...Array(width)].map((v, index) => {\r\n      const arrIdx = i * width + index + 1;\r\n      if (item[arrIdx] === 0) {\r\n        return (\r\n          <Grid item xs={1} key={arrIdx}>\r\n            <button\r\n              type=\"button\"\r\n              className={classes.Mbutton}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setSelect(arrIdx);\r\n              }}\r\n              style={{ padding: '0' }}\r\n            >\r\n              {arrIdx}\r\n            </button>\r\n          </Grid>\r\n        );\r\n      }\r\n      if (item[arrIdx] === 2) {\r\n        return (\r\n          <Grid item xs={1} key={arrIdx}>\r\n            <button\r\n              type=\"button\"\r\n              className={classes.Mbutton3}\r\n              disabled={!adminType}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setSelect(arrIdx);\r\n              }}\r\n            >\r\n              🚧\r\n            </button>\r\n          </Grid>\r\n        );\r\n      }\r\n      if (item[arrIdx] === currentUserID) {\r\n        return (\r\n          <Grid item xs={1} key={arrIdx}>\r\n            <button\r\n              type=\"button\"\r\n              className={classes.Mbutton4}\r\n              style={{ padding: '0' }}\r\n              disabled={adminType}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setSelect(arrIdx);\r\n              }}\r\n            >\r\n              {arrIdx}\r\n            </button>\r\n          </Grid>\r\n        );\r\n      }\r\n      return (\r\n        <Grid item xs={1} key={arrIdx}>\r\n          <button\r\n            type=\"button\"\r\n            className={classes.Mbutton2}\r\n            style={{ padding: '0' }}\r\n            disabled\r\n          >\r\n            {arrIdx}\r\n          </button>\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  const showGridColumn = () => {\r\n    return [...Array(height)].map((v, i) => (\r\n      <Grid container spacing={1} key={i}>\r\n        {loadGridRow(i)}\r\n      </Grid>\r\n    ));\r\n  };\r\n\r\n  const MshowGridColumn = () => {\r\n    return [...Array(height)].map((v, i) => (\r\n      <Grid container spacing={1} key={i}>\r\n        {MloadGridRow(i)}\r\n      </Grid>\r\n    ));\r\n  };\r\n\r\n  const showGridRow = () => {\r\n    return <div style={{ flexGrow: 1 }}>{showGridColumn()}</div>;\r\n  };\r\n\r\n  const MshowGridRow = () => {\r\n    return <div style={{ flexGrow: 1 }}>{MshowGridColumn()}</div>;\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 'auto' }}>\r\n      <Default>\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            fontSize: '3vw',\r\n            fontFamily: 'Anton',\r\n          }}\r\n        >\r\n          <div style={{ marginBottom: '1vh' }}>{title}</div>\r\n\r\n          <div\r\n            style={{\r\n              fontSize: '1rem',\r\n              marginRight: '2vw',\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={toggle}\r\n                  onChange={toggleChange}\r\n                  color=\"primary\"\r\n                  name=\"toggle\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                />\r\n              }\r\n              label=\"학번으로 보기\"\r\n              style={{\r\n                marginBottom: '0.8vh',\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'flex-end',\r\n                flexDirection: 'column',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <Tooltip\r\n                title={<div style={{ fontSize: '0.8rem' }}>신청 가능</div>}\r\n                fontSize=\"5vw\"\r\n                placement=\"left\"\r\n                arrow\r\n              >\r\n                <StatusValue style={{ width: '3.2vw', fontSize: '0.9vw' }}>\r\n                  ✅ : {count[0]}{' '}\r\n                </StatusValue>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={<div style={{ fontSize: '0.8rem' }}>신청 불가</div>}\r\n                fontSize=\"5vw\"\r\n                placement=\"left\"\r\n                arrow\r\n              >\r\n                <StatusValue style={{ width: '3.2vw', fontSize: '0.9vw' }}>\r\n                  ❌ : {count[1]}\r\n                </StatusValue>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={<div style={{ fontSize: '0.8rem' }}>고장</div>}\r\n                fontSize=\"5vw\"\r\n                placement=\"left\"\r\n                arrow\r\n              >\r\n                <StatusValue style={{ width: '3.2vw', fontSize: '0.9vw' }}>\r\n                  🚧 : {count[2]}\r\n                </StatusValue>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Content>\r\n            <div className={classes.root}>{showGridRow()}</div>\r\n          </Content>\r\n          <div\r\n            style={{\r\n              marginRight: '1vw',\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'flex-end',\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontFamily: 'Anton',\r\n                fontSize: '2rem',\r\n                padding: '0 3vw 0 1vw',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: '1.5vw',\r\n                  marginRight: '1vw',\r\n                  textAlign: 'left',\r\n                }}\r\n              >\r\n                {select === -1 ? '-' : select}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'flex-end',\r\n            margin: '2vh 2vw 0 0',\r\n          }}\r\n        >\r\n          <Button\r\n            style={{\r\n              backgroundColor: select === -1 ? 'gray' : 'black',\r\n              color: 'white',\r\n              width: '7.5vw',\r\n              padding: '1vh 2vw',\r\n              marginRight: '1vw',\r\n              fontFamily: 'Noto Sans KR',\r\n            }}\r\n            onClick={onClickFunc}\r\n            disabled={select === -1}\r\n          >\r\n            {/* eslint-disable-next-line no-nested-ternary */}\r\n            {adminType\r\n              ? item[select] === 0\r\n                ? '고장내기'\r\n                : '고치기'\r\n              : item[select] !== currentUserID\r\n              ? '신청'\r\n              : '취소'}\r\n          </Button>\r\n        </div>\r\n      </Default>\r\n      <Mobile>\r\n        <div>\r\n          <center>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                width: '70%',\r\n                flexDirection: 'row',\r\n                MarginLeft: '2rem',\r\n                justifyContent: 'center',\r\n                padding: '1.5vh 0',\r\n                border: '2vw solid RGB(240,240,240)',\r\n                backgroundColor: 'white',\r\n                borderRadius: '10px',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  flexGrow: 1,\r\n                  fontFamily: 'Anton',\r\n                }}\r\n              >\r\n                ⭕ : {count[0]}\r\n              </div>\r\n              <div style={{ flexGrow: 1, fontFamily: 'Anton' }}>\r\n                ❌ : {count[1]}\r\n              </div>\r\n              <div style={{ flexGrow: 1, fontFamily: 'Anton' }}>\r\n                🚧 : {count[2]}\r\n              </div>\r\n            </div>\r\n          </center>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <MContent>{MshowGridRow()}</MContent>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-evenly',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '5vw',\r\n                fontFamily: 'Anton',\r\n                fontSize: '2rem',\r\n              }}\r\n            >\r\n              {select === -1 ? '-' : select}\r\n            </div>\r\n            <div style={{ marginLeft: 0, marginBotto: '2vh' }}>\r\n              <Button\r\n                style={{\r\n                  backgroundColor: select === -1 ? 'gray' : 'black',\r\n                  color: 'white',\r\n                  width: '6vw',\r\n                  fontSize: '12px',\r\n                }}\r\n                onClick={onClickFunc}\r\n                disabled={select === -1}\r\n              >\r\n                {/* eslint-disable-next-line no-nested-ternary */}\r\n                {adminType\r\n                  ? item[select] === 0\r\n                    ? '고장내기'\r\n                    : '고치기'\r\n                  : item[select] !== currentUserID\r\n                  ? '신청'\r\n                  : '취소'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Mobile>\r\n    </div>\r\n  );\r\n};\r\n\r\nCabinet.propTypes = {\r\n  data: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    item: PropTypes.arrayOf.isRequired,\r\n  }).isRequired,\r\n  select: PropTypes.number.isRequired,\r\n  setSelect: PropTypes.func.isRequired,\r\n  cabinetEnroll: PropTypes.func.isRequired,\r\n  cabinetNum: PropTypes.string.isRequired,\r\n  currentUserID: PropTypes.string.isRequired,\r\n  cabinetCancel: PropTypes.func.isRequired,\r\n  adminType: PropTypes.bool.isRequired,\r\n  cabinetBreakDown: PropTypes.func.isRequired,\r\n  cabinetFix: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Cabinet;\r\n","export default __webpack_public_path__ + \"static/media/pcHelp.555e04a5.png\";","export default __webpack_public_path__ + \"static/media/mobileHelp.4d51e24c.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport PropTypes from 'prop-types';\r\nimport { Mobile, Default } from '../MediaQuery';\r\nimport pcHelp from '../image/pcHelp.png';\r\nimport mobileHelp from '../image/mobileHelp.png';\r\n\r\nfunction getModalStyle() {\r\n  return {\r\n    top: `52%`,\r\n    left: `40%`,\r\n    transform: `translate(-41%, -55%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: '60vw',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    padding: theme.spacing(2, 6, 3),\r\n  },\r\n  mpaper: {\r\n    width: '90%',\r\n    backgroundColor: 'RGB(250,250,250)',\r\n    border: '2px solid lightgray',\r\n    padding: '5vh 1vw',\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // display: 'flex',\r\n  },\r\n  mmodal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: '30vh',\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nconst SimpleModal = (props) => {\r\n  const { open, setOpen } = props;\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <img\r\n        src={pcHelp}\r\n        alt=\"pcHelp\"\r\n        width=\"1000vw\"\r\n        style={{ backgroundColor: 'white', width: '60vw' }}\r\n      />\r\n      <SimpleModal />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Default>\r\n        <Modal\r\n          open={open}\r\n          onClose={setOpen}\r\n          className={classes.modal}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {body}\r\n        </Modal>\r\n      </Default>\r\n      <Mobile>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.mmodal}\r\n          open={open}\r\n          onClose={setOpen}\r\n          disableEnforceFocus\r\n          disableAutoFocus\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            <div style={{ width: '100vw' }}>\r\n              <center>\r\n                <div className={classes.mpaper}>\r\n                  <img src={mobileHelp} alt=\"mobileHelp\" width=\"100%\" />\r\n                </div>\r\n              </center>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </Mobile>\r\n    </div>\r\n  );\r\n};\r\n\r\nSimpleModal.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  setOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SimpleModal;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport {\r\n  SwipeableDrawer,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport PropTypes from 'prop-types';\r\nimport Cabinet from './Cabinet';\r\nimport { Default, Mobile } from '../MediaQuery';\r\nimport SimpleModal from './SimpleModal';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-contents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 12vh;\r\n  height: 80%;\r\n  width: 100%;\r\n`;\r\n\r\nconst styles = {\r\n  tabs: {\r\n    height: '9vh',\r\n  },\r\n\r\n  tab_pc: {\r\n    fontSize: '2vw',\r\n    letterSpacing: '0.0001px',\r\n    borderRadius: '10px',\r\n    fontFamily: 'Anton',\r\n    width: '15vw',\r\n  },\r\n\r\n  slide: {\r\n    padding: '100rem',\r\n    minHeight: 100,\r\n  },\r\n};\r\n\r\nconst MainPage = (props) => {\r\n  const {\r\n    data,\r\n    _map,\r\n    visibleMap,\r\n    index,\r\n    handleChange,\r\n    handleChangeIndex,\r\n    select,\r\n    setSelect,\r\n    onClickLogout,\r\n    onClickUserPage,\r\n    onClickAdminPage,\r\n    currentUserName,\r\n    cabinetNames,\r\n    cabinetEnroll,\r\n    currentUserID,\r\n    cabinetCancel,\r\n    adminType,\r\n    cabinetBreakDown,\r\n    cabinetFix,\r\n    mapImage,\r\n    cabinetImage,\r\n  } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const [toggleHelp, setToggleHelp] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setToggleHelp(!toggleHelp);\r\n  };\r\n  const drawlerHandler = () => {\r\n    return (\r\n      <div>\r\n        <Default>\r\n          <SwipeableDrawer\r\n            anchor=\"top\"\r\n            open={_map}\r\n            onClick={() => visibleMap(false)}\r\n            onClose={() => {}}\r\n            onOpen={() => {}}\r\n          >\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                width: '100%',\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-evenly',\r\n                alignItems: 'center',\r\n                padding: '10vh 0',\r\n                backgroundColor: 'rgb(240,240,240)',\r\n                rowGpa: '10vw',\r\n              }}\r\n            >\r\n              <img\r\n                src={mapImage}\r\n                alt=\"map\"\r\n                // width=\"700vw\"\r\n                width=\"50%\"\r\n                style={{ backgroundColor: 'white' }}\r\n              />\r\n              <img\r\n                src={cabinetImage}\r\n                alt=\"cabinetpicture\"\r\n                // width=\"500vw\"\r\n                width=\"30%\"\r\n                style={{ padding: '1rem', backgroundColor: 'white' }}\r\n              />\r\n            </div>\r\n          </SwipeableDrawer>\r\n        </Default>\r\n        <Mobile>\r\n          <SwipeableDrawer\r\n            anchor=\"top\"\r\n            open={_map}\r\n            onClick={() => visibleMap(false)}\r\n            onClose={() => {}}\r\n            onOpen={() => {}}\r\n          >\r\n            <div\r\n              style={{\r\n                position: 'static',\r\n                width: '100%',\r\n                height: 'auto',\r\n                padding: '5vh 5%',\r\n                backgroundColor: 'RGB(245,245,245)',\r\n              }}\r\n            >\r\n              <img\r\n                src={mapImage}\r\n                alt=\"map\"\r\n                width=\"90%\"\r\n                style={{ backgroundColor: 'white' }}\r\n              />\r\n              <img\r\n                src={cabinetImage}\r\n                alt=\"cabinetpicture\"\r\n                width=\"90%\"\r\n                style={{\r\n                  margin: '5vh 0',\r\n                  padding: '0.1rem',\r\n                  backgroundColor: 'white',\r\n                }}\r\n              />\r\n            </div>\r\n          </SwipeableDrawer>\r\n        </Mobile>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const LoadTabs = () => {\r\n    return cabinetNames.map((i) => {\r\n      return (\r\n        <Tab\r\n          key={data.currentCabinets[i].title}\r\n          label={data.currentCabinets[i].title}\r\n          style={styles.tab_pc}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const showTabs = () => {\r\n    return (\r\n      <Tabs\r\n        value={index}\r\n        fullwidth=\"true\"\r\n        onChange={handleChange}\r\n        style={styles.tabs}\r\n        textColor=\"inherit\"\r\n        indicatorColor=\"primary\"\r\n        centered\r\n      >\r\n        {LoadTabs()}\r\n      </Tabs>\r\n    );\r\n  };\r\n\r\n  const LoadContents = () => {\r\n    return cabinetNames.map((i) => {\r\n      return (\r\n        <Cabinet\r\n          key={i}\r\n          cabinetNum={i}\r\n          data={data.currentCabinets[i]}\r\n          select={select}\r\n          setSelect={setSelect}\r\n          cabinetEnroll={cabinetEnroll}\r\n          currentUserID={currentUserID}\r\n          cabinetCancel={cabinetCancel}\r\n          adminType={adminType}\r\n          cabinetBreakDown={cabinetBreakDown}\r\n          cabinetFix={cabinetFix}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const showContents = () => {\r\n    return (\r\n      <SwipeableViews\r\n        index={index}\r\n        onChangeIndex={handleChangeIndex}\r\n        animateHeight\r\n        style={{\r\n          margin: '5vh 5vw',\r\n          padding: '3vh 0 2vh 3vw',\r\n          border: '0.5vh solid lightgray',\r\n          borderRadius: '2vw',\r\n        }}\r\n      >\r\n        {LoadContents()}\r\n      </SwipeableViews>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ width: '100%', height: '100%' }}\r\n      aria-hidden=\"true\"\r\n      onClick={() => setSelect(-1)}\r\n    >\r\n      <Default>\r\n        <header>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: 'black',\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              height: '10vh',\r\n              width: '100vw',\r\n            }}\r\n          >\r\n            <Tooltip\r\n              title={<div style={{ fontSize: '1vw' }}>도움말</div>}\r\n              placement=\"bottom\"\r\n              arrow\r\n            >\r\n              <IconButton\r\n                aria-label=\"delete\"\r\n                style={{\r\n                  left: '1.5vw',\r\n                  position: 'absolute',\r\n                  width: 'auto',\r\n                  fontSize: '3.0vw',\r\n                  color: 'white',\r\n                }}\r\n                onClick={handleOpen}\r\n              >\r\n                <HelpOutlineIcon\r\n                  style={{\r\n                    fontSize: '3.0vw',\r\n                  }}\r\n                />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <div>\r\n              <Tooltip\r\n                title={<div style={{ fontSize: '1vw' }}>실제 사진 보기</div>}\r\n                placement=\"bottom\"\r\n                arrow\r\n              >\r\n                <Button\r\n                  onClick={() => visibleMap(true)}\r\n                  style={{\r\n                    backgroundColor: 'white',\r\n                    width: 'auto',\r\n                    fontFamily: 'Anton',\r\n                    fontSize: '1.2rem',\r\n                  }}\r\n                >\r\n                  photo\r\n                  <ImageIcon style={{ fontSize: '2vw', marginLeft: '0.5vw' }} />\r\n                </Button>\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                right: '5vw',\r\n                backgroundColor: 'white',\r\n                borderRadius: '0.5rem',\r\n                padding: '0.5vh 1vw',\r\n                fontFamily: 'Noto Sans KR',\r\n              }}\r\n            >\r\n              {currentUserName}님 환영합니다!\r\n              <Button\r\n                onClick={handleClick}\r\n                style={{ backgroundColor: 'transparent', margin: '0 0 0 2vw' }}\r\n                disableRipple\r\n              >\r\n                <MenuIcon />\r\n              </Button>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                {adminType ? (\r\n                  <MenuItem\r\n                    onClick={onClickAdminPage}\r\n                    style={{ fontFamily: 'Noto Sans KR' }}\r\n                  >\r\n                    관리자페이지\r\n                  </MenuItem>\r\n                ) : (\r\n                  <MenuItem\r\n                    onClick={onClickUserPage}\r\n                    style={{ fontFamily: 'Noto Sans KR' }}\r\n                  >\r\n                    마이페이지\r\n                  </MenuItem>\r\n                )}\r\n                <MenuItem\r\n                  onClick={onClickLogout}\r\n                  style={{ fontFamily: 'Noto Sans KR' }}\r\n                >\r\n                  로그아웃\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Container>\r\n          {drawlerHandler()}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              overflow: 'hidden',\r\n              '&::-webkit-scrollbar': {\r\n                display: 'none',\r\n              },\r\n            }}\r\n          >\r\n            {showTabs()}\r\n            {showContents()}\r\n          </div>\r\n        </Container>\r\n        <SimpleModal open={toggleHelp} setOpen={handleOpen} />\r\n      </Default>\r\n      {/* <Mobile>\r\n        <div\r\n          style={{\r\n            top: 0,\r\n            left: 0,\r\n            width: '120vw',\r\n            backgroundColor: 'black',\r\n            position: 'absolute',\r\n            height: '8vh',\r\n            padding: 0,\r\n            margin: 0,\r\n          }}\r\n        >\r\n          {' '}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            height: '8vh',\r\n            width: '100vw',\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <div style={{ left: '4vw', position: 'absolute' }}>\r\n            <Button\r\n              onClick={() => visibleMap(true)}\r\n              style={{\r\n                backgroundColor: 'white',\r\n                width: '2.5vw',\r\n                fontFamily: 'Anton',\r\n              }}\r\n            >\r\n              <ImageIcon />\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              right: '4vw',\r\n              backgroundColor: 'white',\r\n              borderRadius: '1vw',\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleClick}\r\n              style={{ backgroundColor: 'transparent' }}\r\n              disableRipple\r\n            >\r\n              <MenuIcon />\r\n            </Button>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              getContentAnchorEl={null}\r\n              anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n              transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              {adminType ? (\r\n                <MenuItem\r\n                  onClick={onClickAdminPage}\r\n                  style={{ fontFamily: 'Noto Sans KR' }}\r\n                >\r\n                  관리자페이지\r\n                </MenuItem>\r\n              ) : (\r\n                <MenuItem\r\n                  onClick={onClickUserPage}\r\n                  style={{ fontFamily: 'Noto Sans KR' }}\r\n                >\r\n                  마이페이지\r\n                </MenuItem>\r\n              )}\r\n              <MenuItem\r\n                onClick={handleOpen}\r\n                style={{ fontFamily: 'Noto Sans KR' }}\r\n              >\r\n                도움말\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={onClickLogout}\r\n                style={{ fontFamily: 'Noto Sans KR' }}\r\n              >\r\n                로그아웃\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </div>\r\n        {drawlerHandler()}\r\n\r\n        <Container style={{ marginTop: '10vh' }}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            {MshowTabs()}\r\n            {MshowContents()}\r\n          </div>\r\n          <SimpleModal open={toggleHelp} setOpen={handleOpen} />\r\n        </Container>\r\n      </Mobile> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nMainPage.propTypes = {\r\n  data: PropTypes.objectOf(PropTypes.object).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleChangeIndex: PropTypes.func.isRequired,\r\n  select: PropTypes.number.isRequired,\r\n  setSelect: PropTypes.func.isRequired,\r\n  _map: PropTypes.bool.isRequired,\r\n  visibleMap: PropTypes.func.isRequired,\r\n  onClickLogout: PropTypes.func.isRequired,\r\n  onClickUserPage: PropTypes.func.isRequired,\r\n  onClickAdminPage: PropTypes.func.isRequired,\r\n  currentUserName: PropTypes.string.isRequired,\r\n  cabinetNames: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  cabinetEnroll: PropTypes.func.isRequired,\r\n  currentUserID: PropTypes.string.isRequired,\r\n  cabinetCancel: PropTypes.func.isRequired,\r\n  adminType: PropTypes.bool.isRequired,\r\n  cabinetBreakDown: PropTypes.func.isRequired,\r\n  cabinetFix: PropTypes.func.isRequired,\r\n  mapImage: PropTypes.string.isRequired,\r\n  cabinetImage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport {\r\n  SwipeableDrawer,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport PropTypes from 'prop-types';\r\nimport Cabinet from '../Pages/Cabinet';\r\nimport { Default, Mobile } from '../MediaQuery';\r\nimport SimpleModal from '../Pages/SimpleModal';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-contents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 12vh;\r\n  height: 80%;\r\n  width: 100%;\r\n`;\r\n\r\nconst styles = {\r\n  Mtabs: {\r\n    height: '7vh',\r\n  },\r\n\r\n  tab_mobile: {\r\n    fontSize: '6vw',\r\n    fontFamily: 'Anton',\r\n    margin: '0',\r\n    letterSpacing: '0.0001px',\r\n    justifyContent: 'center',\r\n    borderRadius: '10px',\r\n    width: 'auto',\r\n  },\r\n\r\n  slide: {\r\n    padding: '100rem',\r\n    minHeight: 100,\r\n  },\r\n};\r\n\r\nconst MainPageMobile = (props) => {\r\n  const {\r\n    data,\r\n    _map,\r\n    visibleMap,\r\n    index,\r\n    handleChange,\r\n    handleChangeIndex,\r\n    select,\r\n    setSelect,\r\n    onClickLogout,\r\n    onClickUserPage,\r\n    onClickAdminPage,\r\n    currentUserName,\r\n    cabinetNames,\r\n    cabinetEnroll,\r\n    currentUserID,\r\n    cabinetCancel,\r\n    adminType,\r\n    cabinetBreakDown,\r\n    cabinetFix,\r\n    mapImage,\r\n    cabinetImage,\r\n  } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const [toggleHelp, setToggleHelp] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setToggleHelp(!toggleHelp);\r\n  };\r\n  const drawlerHandler = () => {\r\n    return (\r\n      <div>\r\n        <Mobile>\r\n          <SwipeableDrawer\r\n            anchor=\"top\"\r\n            open={_map}\r\n            onClick={() => visibleMap(false)}\r\n            onClose={() => {}}\r\n            onOpen={() => {}}\r\n          >\r\n            <div\r\n              style={{\r\n                position: 'static',\r\n                width: '100%',\r\n                height: 'auto',\r\n                padding: '5vh 5%',\r\n                backgroundColor: 'RGB(245,245,245)',\r\n              }}\r\n            >\r\n              <img\r\n                src={mapImage}\r\n                alt=\"map\"\r\n                width=\"80%\"\r\n                style={{ backgroundColor: 'white' }}\r\n              />\r\n              <img\r\n                src={cabinetImage}\r\n                alt=\"cabinetpicture\"\r\n                width=\"80%\"\r\n                style={{\r\n                  margin: '5vh 0',\r\n                  padding: '0.1rem',\r\n                  backgroundColor: 'white',\r\n                }}\r\n              />\r\n            </div>\r\n          </SwipeableDrawer>\r\n        </Mobile>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const MLoadTabs = () => {\r\n    return cabinetNames.map((i) => {\r\n      return (\r\n        <Tab\r\n          key={data.currentCabinets[i].title}\r\n          label={data.currentCabinets[i].title}\r\n          style={styles.tab_mobile}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const MshowTabs = () => {\r\n    return (\r\n      <Tabs\r\n        value={index}\r\n        fullwidth=\"true\"\r\n        onChange={handleChange}\r\n        style={styles.Mtabs}\r\n        textColor=\"inherit\"\r\n        indicatorColor=\"primary\"\r\n        centered\r\n      >\r\n        {MLoadTabs()}\r\n      </Tabs>\r\n    );\r\n  };\r\n\r\n  const MLoadContents = () => {\r\n    return cabinetNames.map((i) => {\r\n      return (\r\n        <Cabinet\r\n          key={i}\r\n          cabinetNum={i}\r\n          data={data.currentCabinets[i]}\r\n          select={select}\r\n          setSelect={setSelect}\r\n          cabinetEnroll={cabinetEnroll}\r\n          currentUserID={currentUserID}\r\n          cabinetCancel={cabinetCancel}\r\n          adminType={adminType}\r\n          cabinetBreakDown={cabinetBreakDown}\r\n          cabinetFix={cabinetFix}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const MshowContents = () => {\r\n    return (\r\n      <SwipeableViews\r\n        index={index}\r\n        onChangeIndex={handleChangeIndex}\r\n        animateHeight\r\n        style={{\r\n          margin: '3vh 0',\r\n          padding: '1vh 0',\r\n          borderRadius: '2vw',\r\n        }}\r\n      >\r\n        {MLoadContents()}\r\n      </SwipeableViews>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ width: '100%', height: '100%' }}\r\n      aria-hidden=\"true\"\r\n      onClick={() => setSelect(-1)}\r\n    >\r\n      <Mobile>\r\n        <div\r\n          style={{\r\n            top: 0,\r\n            left: 0,\r\n            width: '120vw',\r\n            backgroundColor: 'black',\r\n            position: 'absolute',\r\n            height: '8vh',\r\n            padding: 0,\r\n            margin: 0,\r\n          }}\r\n        >\r\n          {' '}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            height: '8vh',\r\n            width: '100vw',\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <div style={{ left: '4vw', position: 'absolute' }}>\r\n            <Button\r\n              onClick={() => visibleMap(true)}\r\n              style={{\r\n                backgroundColor: 'white',\r\n                width: '2.5vw',\r\n                fontFamily: 'Anton',\r\n              }}\r\n            >\r\n              <ImageIcon />\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              right: '4vw',\r\n              backgroundColor: 'white',\r\n              borderRadius: '1vw',\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleClick}\r\n              style={{ backgroundColor: 'transparent' }}\r\n              disableRipple\r\n            >\r\n              <MenuIcon />\r\n            </Button>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              getContentAnchorEl={null}\r\n              anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n              transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              {adminType ? (\r\n                <MenuItem\r\n                  onClick={onClickAdminPage}\r\n                  style={{ fontFamily: 'Noto Sans KR' }}\r\n                >\r\n                  관리자페이지\r\n                </MenuItem>\r\n              ) : (\r\n                <MenuItem\r\n                  onClick={onClickUserPage}\r\n                  style={{ fontFamily: 'Noto Sans KR' }}\r\n                >\r\n                  마이페이지\r\n                </MenuItem>\r\n              )}\r\n              <MenuItem\r\n                onClick={handleOpen}\r\n                style={{ fontFamily: 'Noto Sans KR' }}\r\n              >\r\n                도움말\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={onClickLogout}\r\n                style={{ fontFamily: 'Noto Sans KR' }}\r\n              >\r\n                로그아웃\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </div>\r\n        {drawlerHandler()}\r\n\r\n        <Container style={{ marginTop: '10vh' }}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            {MshowTabs()}\r\n            {MshowContents()}\r\n          </div>\r\n          <SimpleModal open={toggleHelp} setOpen={handleOpen} />\r\n        </Container>\r\n      </Mobile>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainPageMobile.propTypes = {\r\n  data: PropTypes.objectOf(PropTypes.object).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleChangeIndex: PropTypes.func.isRequired,\r\n  select: PropTypes.number.isRequired,\r\n  setSelect: PropTypes.func.isRequired,\r\n  _map: PropTypes.bool.isRequired,\r\n  visibleMap: PropTypes.func.isRequired,\r\n  onClickLogout: PropTypes.func.isRequired,\r\n  onClickUserPage: PropTypes.func.isRequired,\r\n  onClickAdminPage: PropTypes.func.isRequired,\r\n  currentUserName: PropTypes.string.isRequired,\r\n  cabinetNames: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  cabinetEnroll: PropTypes.func.isRequired,\r\n  currentUserID: PropTypes.string.isRequired,\r\n  cabinetCancel: PropTypes.func.isRequired,\r\n  adminType: PropTypes.bool.isRequired,\r\n  cabinetBreakDown: PropTypes.func.isRequired,\r\n  cabinetFix: PropTypes.func.isRequired,\r\n  mapImage: PropTypes.string.isRequired,\r\n  cabinetImage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MainPageMobile;\r\n","const { default: Swal } = require('sweetalert2');\r\nconst { database } = require('../../configs/firebase.config');\r\n\r\nconst breakDownCabinet = (cabinetTitle, select) => {\r\n  database.ref(`cabinet/${cabinetTitle}/item/${select}`).transaction(\r\n    (cabinet) => {\r\n      if (cabinet === 0) {\r\n        return 2;\r\n      }\r\n      // eslint-disable-next-line no-useless-return\r\n      return;\r\n    },\r\n    (error, committed, snapshot) => {\r\n      if (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: '사물함 고장 에러',\r\n          text: `관리자에게 문의해 주세요.`,\r\n          showConfirmButton: true,\r\n          width: '25rem',\r\n          timer: 5000,\r\n        });\r\n      } else if (!committed) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: '사물함 고장 실패',\r\n          text: `이미 고장낸 사람이 있거나 고장이 불가능합니다.`,\r\n          showConfirmButton: true,\r\n          width: '25rem',\r\n          timer: 5000,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: '사물함 고장 성공',\r\n          text: `${select}번 사물함이 고장상태로 변경되었습니다`,\r\n          showConfirmButton: true,\r\n          width: '25rem',\r\n          timer: 5000,\r\n        });\r\n      }\r\n    },\r\n  );\r\n};\r\n\r\nexport default breakDownCabinet;\r\n","const { default: Swal } = require('sweetalert2');\r\nconst { database } = require('../../configs/firebase.config');\r\nconst { default: writeUserData } = require('./writeUserData');\r\n\r\nconst cancelCabinet = (\r\n  userCabinetTitle,\r\n  userCabinetIdx,\r\n  currentUserID,\r\n  userId,\r\n  currentUserName,\r\n) => {\r\n  const select = userCabinetIdx;\r\n  database\r\n    .ref(`cabinet/${userCabinetTitle}/item/${userCabinetIdx}`)\r\n    .transaction(\r\n      (cabinet) => {\r\n        if (cabinet === currentUserID) {\r\n          return 0;\r\n        }\r\n        // eslint-disable-next-line no-useless-return\r\n        return;\r\n      },\r\n      (error, committed) => {\r\n        if (error) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: '사물함 취소 에러',\r\n            text: `관리자에게 문의해 주세요.`,\r\n            showConfirmButton: true,\r\n            width: '25rem',\r\n            timer: 5000,\r\n          });\r\n        } else if (!committed) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: '사물함 취소 실패',\r\n            text: `취소가 불가능합니다.`,\r\n            showConfirmButton: true,\r\n            width: '25rem',\r\n            timer: 5000,\r\n          });\r\n        } else {\r\n          writeUserData(userId, currentUserName, currentUserID, 0, 0);\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: '사물함 취소 성공',\r\n            text: ` ${select}번 사물함이 취소되었습니다`,\r\n            showConfirmButton: true,\r\n            width: '30rem',\r\n            timer: 5000,\r\n          });\r\n        }\r\n      },\r\n    );\r\n};\r\n\r\nexport default cancelCabinet;\r\n","import cancelCabinet from './cancelCabinet';\r\n\r\nconst { default: Swal } = require('sweetalert2');\r\nconst { database } = require('../../configs/firebase.config');\r\nconst { default: writeUserData } = require('./writeUserData');\r\n\r\nconst enrollCabinet = (\r\n  cabinetTitle,\r\n  userCabinetTitle,\r\n  userCabinetIdx,\r\n  select,\r\n  currentUserID,\r\n  userId,\r\n  currentUserName,\r\n) => {\r\n  if (userCabinetTitle === 0 && userCabinetIdx === 0) {\r\n    database.ref(`cabinet/${cabinetTitle}/item/${select}`).transaction(\r\n      (cabinet) => {\r\n        if (cabinet === 0) {\r\n          return currentUserID;\r\n        }\r\n        // eslint-disable-next-line no-useless-return\r\n        return;\r\n      },\r\n      (error, committed, snapshot) => {\r\n        if (error) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: '사물함 신청 에러',\r\n            text: `관리자에게 문의해 주세요.`,\r\n            showConfirmButton: true,\r\n            width: '25rem',\r\n            timer: 5000,\r\n          });\r\n        } else if (!committed) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: '사물함 신청 실패',\r\n            text: `이미 신청한 사람이 있거나 신청이 불가능합니다.`,\r\n            showConfirmButton: true,\r\n            width: '25rem',\r\n            timer: 5000,\r\n          });\r\n        } else {\r\n          writeUserData(\r\n            userId,\r\n            currentUserName,\r\n            currentUserID,\r\n            cabinetTitle,\r\n            select,\r\n          );\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: '사물함 신청 성공',\r\n            text: `${select}번 사물함으로 신청되었습니다`,\r\n            showConfirmButton: true,\r\n            width: '25rem',\r\n            timer: 5000,\r\n          });\r\n        }\r\n      },\r\n    );\r\n  } else {\r\n    Swal.fire({\r\n      icon: 'question',\r\n      title: '사물함 신청 취소',\r\n      html:\r\n        '현재 등록된 사물함을 취소해야합니다.<br/>' +\r\n        '정말 사물함을 취소하시겠습니까?',\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: '예',\r\n      cancelButtonText: '아니오',\r\n      width: '35rem',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        cancelCabinet(\r\n          userCabinetTitle,\r\n          userCabinetIdx,\r\n          currentUserID,\r\n          userId,\r\n          currentUserName,\r\n        );\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport default enrollCabinet;\r\n","const { default: Swal } = require('sweetalert2');\r\nconst { database } = require('../../configs/firebase.config');\r\n\r\nconst fixCabinet = (cabinetTitle, select) => {\r\n  database.ref(`cabinet/${cabinetTitle}/item/${select}`).transaction(\r\n    (cabinet) => {\r\n      if (cabinet === 2) {\r\n        return 0;\r\n      }\r\n      // eslint-disable-next-line no-useless-return\r\n      return;\r\n    },\r\n    (error, committed, snapshot) => {\r\n      if (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: '사물함 고치기 에러',\r\n          text: `관리자에게 문의해 주세요.`,\r\n          showConfirmButton: true,\r\n          width: '25rem',\r\n          timer: 5000,\r\n        });\r\n      } else if (!committed) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: '사물함 고치기 실패',\r\n          text: `이미 고장낸 사람이 있거나 고장이 불가능합니다.`,\r\n          showConfirmButton: true,\r\n          width: '25rem',\r\n          timer: 5000,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: '사물함 고치기 성공',\r\n          text: `${select}번 사물함이 사용가능 상태로 변경되었습니다`,\r\n          showConfirmButton: true,\r\n          width: '25rem',\r\n          timer: 5000,\r\n        });\r\n      }\r\n    },\r\n  );\r\n};\r\n\r\nexport default fixCabinet;\r\n","import { clearCurrentUser } from '../../redux/auth/auth.reducer';\r\n\r\nconst { auth } = require('../../configs/firebase.config');\r\n\r\nconst logOutUser = (history) => {\r\n  auth\r\n    .signOut()\r\n    .then(() => {\r\n      clearCurrentUser();\r\n      history.push('/');\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n};\r\n\r\nexport default logOutUser;\r\n","export default __webpack_public_path__ + \"static/media/Cabinet001.d7a232d5.png\";","export default __webpack_public_path__ + \"static/media/Cabinet049.578d886e.png\";","export default __webpack_public_path__ + \"static/media/Cabinet061.47e5e8d1.png\";","export default __webpack_public_path__ + \"static/media/Cabinet085.ab388460.png\";","export default __webpack_public_path__ + \"static/media/Cabinet145.3255103b.png\";","export default __webpack_public_path__ + \"static/media/Cabinet6x6.d88d4a8f.jpg\";","export default __webpack_public_path__ + \"static/media/Cabinet6x10.7e14aace.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { CircularProgress } from '@material-ui/core/';\r\nimport { Mobile, Default } from '../MediaQuery';\r\nimport ServerLoadingPage from '../Pages/ServerLoadingPage';\r\nimport LoadingPage from '../Pages/LoadingPage';\r\nimport MainPage from '../Pages/MainPage';\r\nimport MainPageMobile from '../Mobile/MainPageMobile';\r\nimport breakDownCabinet from '../utils/firebase/breakDownCabinet';\r\nimport cancelCabinet from '../utils/firebase/cancelCabinet';\r\nimport enrollCabinet from '../utils/firebase/enrollCabinet';\r\nimport fixCabinet from '../utils/firebase/fixCabinet';\r\nimport logOutUser from '../utils/firebase/logoutUser';\r\nimport Cabinet001 from '../image/Cabinet001.png';\r\nimport Cabinet049 from '../image/Cabinet049.png';\r\nimport Cabinet061 from '../image/Cabinet061.png';\r\nimport Cabinet085 from '../image/Cabinet085.png';\r\nimport Cabinet145 from '../image/Cabinet145.png';\r\nimport Cabinet6x6 from '../image/Cabinet6x6.jpg';\r\nimport Cabinet6x10 from '../image/Cabinet6x10.jpg';\r\n\r\nconst MainPageContainer = () => {\r\n  const history = useHistory();\r\n  const data = useSelector((state) => state.cabinet.currentCabinets);\r\n  const currentUserID = useSelector((state) => state.auth.currentUserID);\r\n  const currentUserName = useSelector((state) => state.auth.currentUserName);\r\n  const userId = useSelector((state) => state.auth.currentUser.uid);\r\n  const userCabinetIdx = useSelector((state) => state.auth.cabinetIdx);\r\n  const userCabinetTitle = useSelector((state) => state.auth.cabinetTitle);\r\n  const serverStatus = useSelector((state) => state.server);\r\n  const adminType = useSelector((state) => state.auth.adminType);\r\n  const cabinetNames = [\r\n    'cabinet1',\r\n    'cabinet2',\r\n    'cabinet3',\r\n    'cabinet4',\r\n    'cabinet5',\r\n  ];\r\n  const [_map, visibleMap] = useState(false);\r\n  const [index, setIndex] = useState(0);\r\n  const [select, setSelect] = useState(-1);\r\n  const [mapImage, setMapImage] = React.useState(null);\r\n  const [cabinetImage, setCabinetImage] = React.useState(null);\r\n\r\n  const imageChange = () => {\r\n    if (index === 0) {\r\n      setMapImage(Cabinet001);\r\n      setCabinetImage(Cabinet6x6);\r\n    } else if (index === 1) {\r\n      setMapImage(Cabinet049);\r\n      setCabinetImage(Cabinet6x10);\r\n    } else if (index === 2) {\r\n      setMapImage(Cabinet061);\r\n      setCabinetImage(Cabinet6x6);\r\n    } else if (index === 3) {\r\n      setMapImage(Cabinet085);\r\n      setCabinetImage(Cabinet6x10);\r\n    } else if (index === 4) {\r\n      setMapImage(Cabinet145);\r\n      setCabinetImage(Cabinet6x6);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    imageChange();\r\n  }, [index]);\r\n\r\n  const onClickUserPage = () => {\r\n    history.push('/userpage');\r\n  };\r\n\r\n  const onClickAdminPage = () => {\r\n    history.push('/adminpage');\r\n  };\r\n\r\n  const onClickLogout = () => {\r\n    logOutUser(history);\r\n  };\r\n\r\n  const handleChangeIndex = (value) => {\r\n    setIndex(value);\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setIndex(newValue);\r\n  };\r\n\r\n  const toLoginPage = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  const cabinetEnroll = (title) => {\r\n    enrollCabinet(\r\n      title,\r\n      userCabinetTitle,\r\n      userCabinetIdx,\r\n      select,\r\n      currentUserID,\r\n      userId,\r\n      currentUserName,\r\n    );\r\n  };\r\n\r\n  const cabinetCancel = () => {\r\n    cancelCabinet(\r\n      userCabinetTitle,\r\n      userCabinetIdx,\r\n      currentUserID,\r\n      userId,\r\n      currentUserName,\r\n    );\r\n  };\r\n\r\n  const serverWarning = () => {\r\n    return Swal.fire({\r\n      title: '서버가 닫혀있습니다.',\r\n      width: 600,\r\n      padding: '3em',\r\n      background: 'RGB(200,200,200)',\r\n    });\r\n  };\r\n\r\n  const cabinetBreakDown = (title) => {\r\n    breakDownCabinet(title, select);\r\n  };\r\n\r\n  const cabinetFix = (title) => {\r\n    fixCabinet(title, select);\r\n  };\r\n  return (\r\n    <>\r\n      {data ? (\r\n        <>\r\n          {userId ? (\r\n            <>\r\n              {serverStatus?.status?.status || adminType ? (\r\n                <>\r\n                  <Default>\r\n                    <MainPage\r\n                      data={data}\r\n                      _map={_map}\r\n                      visibleMap={visibleMap}\r\n                      index={index}\r\n                      select={select}\r\n                      setSelect={setSelect}\r\n                      onClickLogout={onClickLogout}\r\n                      handleChangeIndex={handleChangeIndex}\r\n                      handleChange={handleChange}\r\n                      currentUserName={currentUserName}\r\n                      cabinetNames={cabinetNames}\r\n                      cabinetEnroll={cabinetEnroll}\r\n                      currentUserID={currentUserID}\r\n                      cabinetCancel={cabinetCancel}\r\n                      onClickUserPage={onClickUserPage}\r\n                      onClickAdminPage={onClickAdminPage}\r\n                      adminType={adminType}\r\n                      cabinetBreakDown={cabinetBreakDown}\r\n                      cabinetFix={cabinetFix}\r\n                      mapImage={mapImage}\r\n                      cabinetImage={cabinetImage}\r\n                    />\r\n                  </Default>\r\n                  <Mobile>\r\n                    <MainPageMobile\r\n                      data={data}\r\n                      _map={_map}\r\n                      visibleMap={visibleMap}\r\n                      index={index}\r\n                      select={select}\r\n                      setSelect={setSelect}\r\n                      onClickLogout={onClickLogout}\r\n                      handleChangeIndex={handleChangeIndex}\r\n                      handleChange={handleChange}\r\n                      currentUserName={currentUserName}\r\n                      cabinetNames={cabinetNames}\r\n                      cabinetEnroll={cabinetEnroll}\r\n                      currentUserID={currentUserID}\r\n                      cabinetCancel={cabinetCancel}\r\n                      onClickUserPage={onClickUserPage}\r\n                      onClickAdminPage={onClickAdminPage}\r\n                      adminType={adminType}\r\n                      cabinetBreakDown={cabinetBreakDown}\r\n                      cabinetFix={cabinetFix}\r\n                      mapImage={mapImage}\r\n                      cabinetImage={cabinetImage}\r\n                    />\r\n                  </Mobile>\r\n                </>\r\n              ) : (\r\n                <div>\r\n                  <ServerLoadingPage />\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            toLoginPage()\r\n          )}\r\n        </>\r\n      ) : (\r\n        <LoadingPage />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPageContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Default, Mobile } from '../MediaQuery';\r\nimport backwards from '../image/Backward.png';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-contents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 9vh;\r\n  height: 80%;\r\n  width: 100%;\r\n`;\r\n\r\nconst UserpageTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.5vw;\r\n  font-weight: bold;\r\n  padding: 1vh 0 2vh;\r\n  border-bottom: 1px solid RGB(200, 200, 200);\r\n`;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cancleButton: {\r\n    fontFamily: 'Noto Sans KR',\r\n    fontWeight: 'bold',\r\n    backgroundColor: 'red',\r\n    color: 'white',\r\n    opacity: 0.6,\r\n    padding: '0.5vh 1vw',\r\n    borderRadius: '0.5vw',\r\n    '&:hover': {\r\n      backgroundColor: 'red',\r\n      opacity: 1,\r\n    },\r\n  },\r\n\r\n  changeButton: {\r\n    fontFamily: 'Noto Sans KR',\r\n    fontWeight: 'bold',\r\n    backgroundColor: 'rgb(180,180,180)',\r\n    color: 'white',\r\n    width: '25vw',\r\n    height: '6vh',\r\n    borderRadius: '0.5vw',\r\n    margin: '1vh 0',\r\n    '&:hover': {\r\n      backgroundColor: 'rgb(150,150,150)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserPage = (props) => {\r\n  const {\r\n    onClickLogout,\r\n    currentUserName,\r\n    currentUserCabinetIdx,\r\n    currentUserCabinetTitle,\r\n    cabinetCancel,\r\n    updatePW,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const classes = useStyles();\r\n  const [currentPassword, setCurrent] = React.useState('');\r\n  const [changePassword, setChange] = React.useState('');\r\n  const [confirmPassword, setConfirm] = React.useState('');\r\n  const cabinetTitle = ['001', '049', '061', '085', '145'];\r\n\r\n  const currnetPasswordHandler = (e) => {\r\n    setCurrent(e.target.value);\r\n  };\r\n\r\n  const changePasswordHandler = (e) => {\r\n    setChange(e.target.value);\r\n  };\r\n\r\n  const confirmPasswordHandler = (e) => {\r\n    setConfirm(e.target.value);\r\n  };\r\n\r\n  const passwordChangeFunc = async () => {\r\n    await updatePW(currentPassword, changePassword, confirmPassword);\r\n    setCurrent('');\r\n    setChange('');\r\n    setConfirm('');\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100%' }}>\r\n      <header>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: 'black',\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            height: '10vh',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div style={{ left: '2vw', position: 'absolute' }}>\r\n            <Link to=\"/main\">\r\n              <img\r\n                src={backwards}\r\n                alt=\"backwards\"\r\n                style={{\r\n                  width: '1.5vw',\r\n                  filter: 'invert(100%)',\r\n                }}\r\n              />\r\n            </Link>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              right: '5vw',\r\n              backgroundColor: 'white',\r\n              borderRadius: '0.5rem',\r\n              padding: '0.5vh 1vw',\r\n              fontFamily: 'Noto Sans KR',\r\n            }}\r\n          >\r\n            {currentUserName}님 환영합니다!\r\n            <Button\r\n              onClick={handleClick}\r\n              style={{ backgroundColor: 'transparent', margin: '0 0 0 2vw' }}\r\n              disableRipple\r\n            >\r\n              <MenuIcon />\r\n            </Button>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              getContentAnchorEl={null}\r\n              anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n              transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem\r\n                onClick={onClickLogout}\r\n                style={{ fontFamily: 'Noto Sans KR' }}\r\n              >\r\n                로그아웃\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <Container style={{ marginTop: '14vh' }}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            border: '3px solid lightgray',\r\n            borderRadius: '2vw',\r\n            width: '40vw',\r\n            height: '75vh',\r\n            padding: '2vh 0',\r\n            columnGap: '2vh',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              flexGrow: 1,\r\n              width: '80%',\r\n            }}\r\n          >\r\n            <UserpageTitle style={{ fontFamily: 'Noto Sans KR' }}>\r\n              나의 사물함\r\n            </UserpageTitle>\r\n            <div\r\n              style={{\r\n                height: 'auto',\r\n                overflow: 'hidden',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  justifyContent: 'space-evenly',\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  margin: '4vh 0 5vh',\r\n                  fontSize: '2vw',\r\n                  flexDirection: 'row',\r\n                }}\r\n              >\r\n                <div style={{ fontFamily: 'Noto Sans KR' }}>\r\n                  {currentUserCabinetTitle && currentUserCabinetTitle !== 0\r\n                    ? `사물함위치 : ${\r\n                        cabinetTitle[\r\n                          // eslint-disable-next-line radix\r\n                          parseInt(\r\n                            currentUserCabinetTitle.substr(\r\n                              currentUserCabinetTitle.length - 1,\r\n                            ),\r\n                          ) - 1\r\n                        ]\r\n                      } -\r\n                    ${currentUserCabinetIdx}번 사물함`\r\n                    : `예약된 사물함이 없습니다.`}\r\n                </div>\r\n                {currentUserCabinetTitle !== 0 ? (\r\n                  <Button\r\n                    className={classes.cancleButton}\r\n                    onClick={cabinetCancel}\r\n                    style={{\r\n                      fontFamily: 'Noto Sans KR',\r\n                    }}\r\n                  >\r\n                    취소\r\n                  </Button>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{ flexGrow: 2, width: '80%' }}>\r\n            <UserpageTitle style={{ fontFamily: 'Noto Sans KR' }}>\r\n              비밀번호 변경\r\n            </UserpageTitle>\r\n            <div\r\n              style={{\r\n                height: 'auto',\r\n                overflow: 'hidden',\r\n                margin: '2vh 0',\r\n              }}\r\n            >\r\n              <FormControl>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'column',\r\n                    marginTop: '1vh',\r\n                    width: '100%',\r\n                  }}\r\n                >\r\n                  <center>\r\n                    <TextField\r\n                      label=\"현재 비밀번호\"\r\n                      variant=\"outlined\"\r\n                      value={currentPassword}\r\n                      onChange={currnetPasswordHandler}\r\n                      placeholder=\"현재 비밀번호를 입력해주세요.\"\r\n                      type=\"password\"\r\n                      style={{ width: '25vw', margin: '1.5vh 0' }}\r\n                    />\r\n                    <TextField\r\n                      label=\"변경 비밀번호\"\r\n                      variant=\"outlined\"\r\n                      type=\"password\"\r\n                      value={changePassword}\r\n                      placeholder=\"6글자 이상의 비밀번호를 입력해주세요.\"\r\n                      onChange={changePasswordHandler}\r\n                      style={{ width: '25vw', margin: '1.5vh 0' }}\r\n                    />\r\n                    <TextField\r\n                      label=\"비밀번호 확인\"\r\n                      variant=\"outlined\"\r\n                      type=\"password\"\r\n                      value={confirmPassword}\r\n                      placeholder=\"위와 동일한 6글자 이상의 비밀번호를 입력해주세요.\"\r\n                      onChange={confirmPasswordHandler}\r\n                      style={{ width: '25vw', margin: '1.5vh 0' }}\r\n                    />\r\n                  </center>\r\n                  <Button\r\n                    className={classes.changeButton}\r\n                    onClick={passwordChangeFunc}\r\n                    style={{\r\n                      fontFamily: 'Noto Sans KR',\r\n                      backgroundColor: 'rgb(63,81,181)',\r\n                      color: 'white',\r\n                    }}\r\n                  >\r\n                    변경하기\r\n                  </Button>\r\n                </div>\r\n              </FormControl>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      {/* <Mobile>\r\n        <header>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: 'black',\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              height: '8vh',\r\n              width: '100%',\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <div style={{ left: '4vw', position: 'absolute' }}>\r\n              <Link to=\"/main\">\r\n                <img\r\n                  src={backwards}\r\n                  alt=\"backwards\"\r\n                  style={{\r\n                    width: '5vw',\r\n                    filter: 'invert(100%)',\r\n                  }}\r\n                />\r\n              </Link>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                right: '4vw',\r\n                backgroundColor: 'white',\r\n                borderRadius: '1vw',\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleClick}\r\n                style={{ backgroundColor: 'transparent' }}\r\n                disableRipple\r\n              >\r\n                <MenuIcon />\r\n              </Button>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={onClickLogout}\r\n                  style={{ fontFamily: 'Noto Sans KR' }}\r\n                >\r\n                  로그아웃\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Container style={{ marginTop: '10vh' }}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              border: '5px solid lightgray',\r\n              borderRadius: '6vw',\r\n              width: '80%',\r\n              height: '50%',\r\n              margin: '2vh 0',\r\n              padding: '3vh 0 4vh',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flexGrow: 1,\r\n                width: '80%',\r\n              }}\r\n            >\r\n              <MUserpageTitle style={{ fontFamily: 'Noto Sans KR' }}>\r\n                사물함위치\r\n              </MUserpageTitle>\r\n              <div\r\n                style={{\r\n                  height: 'auto',\r\n                  overflow: 'hidden',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    margin: '4vh 0 1vh',\r\n                    paddingBottom: '5vh',\r\n                    fontSize: '1.2rem',\r\n                    flexDirection: 'column',\r\n                    borderBottom: '1px solid gray',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ marginBottom: '3vh', fontFamily: 'Noto Sans KR' }}\r\n                  >\r\n                    {currentUserCabinetTitle && currentUserCabinetTitle !== 0\r\n                      ? `사물함위치 : ${\r\n                          cabinetTitle[\r\n                            // eslint-disable-next-line radix\r\n                            parseInt(\r\n                              currentUserCabinetTitle.substr(\r\n                                currentUserCabinetTitle.length - 1,\r\n                              ),\r\n                            ) - 1\r\n                          ]\r\n                        } -\r\n                    ${currentUserCabinetIdx}번 사물함`\r\n                      : `예약된 사물함이 없습니다.`}\r\n                  </div>\r\n                  {currentUserCabinetTitle !== 0 ? (\r\n                    <Button\r\n                      className={classes.McancleButton}\r\n                      onClick={cabinetCancel}\r\n                      disabled={currentUserCabinetTitle === 0}\r\n                    >\r\n                      취소\r\n                    </Button>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ flexGrow: 2, width: '80%' }}>\r\n              <MUserpageTitle style={{ fontFamily: 'Noto Sans KR' }}>\r\n                비밀번호 변경\r\n              </MUserpageTitle>\r\n              <div\r\n                style={{\r\n                  height: 'auto',\r\n                  overflow: 'hidden',\r\n                  margin: '2vh 0',\r\n                }}\r\n              >\r\n                <FormControl>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                      flexDirection: 'column',\r\n                      marginTop: '1vh',\r\n                      width: '100%',\r\n                    }}\r\n                  >\r\n                    <center>\r\n                      <TextField\r\n                        id=\"currentpassword\"\r\n                        label=\"현재 비밀번호\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n                        value={currentPassword}\r\n                        onChange={currnetPasswordHandler}\r\n                        placeholder=\"현재 비밀번호를 입력해주세요.\"\r\n                        margin=\"dense\"\r\n                        style={{\r\n                          width: '60vw',\r\n                          margin: '1vh 0',\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        id=\"changepassword\"\r\n                        label=\"변경 비밀번호\"\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        type=\"password\"\r\n                        value={changePassword}\r\n                        placeholder=\"6글자 이상의 비밀번호를 입력해주세요.\"\r\n                        onChange={changePasswordHandler}\r\n                        style={{\r\n                          width: '60vw',\r\n                          margin: '1vh 0',\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        id=\"confirmpassword\"\r\n                        label=\"비밀번호 확인\"\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        placeholder=\"위와 동일한 6글자 이상의 비밀번호를 입력해주세요.\"\r\n                        onChange={confirmPasswordHandler}\r\n                        style={{\r\n                          width: '60vw',\r\n                          margin: '1vh 0',\r\n                        }}\r\n                      />\r\n                    </center>\r\n                    <Button\r\n                      className={classes.MchangeButton}\r\n                      onClick={passwordChangeFunc}\r\n                      style={{\r\n                        fontFamily: 'Noto Sans KR',\r\n                        backgroundColor: 'rgb(63,81,181)',\r\n                        color: 'white',\r\n                      }}\r\n                    >\r\n                      변경하기\r\n                    </Button>\r\n                  </div>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Mobile> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nUserPage.propTypes = {\r\n  onClickLogout: PropTypes.func.isRequired,\r\n  currentUserName: PropTypes.string.isRequired,\r\n  currentUserCabinetIdx: PropTypes.number.isRequired,\r\n  currentUserCabinetTitle: PropTypes.string.isRequired,\r\n  cabinetCancel: PropTypes.func.isRequired,\r\n  updatePW: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Default, Mobile } from '../MediaQuery';\r\nimport backwards from '../image/Backward.png';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-contents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 9vh;\r\n  height: 80%;\r\n  width: 100%;\r\n`;\r\n\r\nconst MUserpageTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 6vw;\r\n  font-weight: bold;\r\n  padding: 1vh 0 0.5vh;\r\n`;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  McancleButton: {\r\n    fontFamily: 'Noto Sans KR',\r\n    fontWeight: 'bold',\r\n    backgroundColor: 'red',\r\n    opacity: 0.6,\r\n    color: 'white',\r\n    borderRadius: '2vw',\r\n    '&:hover': {\r\n      backgroundColor: 'red',\r\n      opacity: 1,\r\n    },\r\n  },\r\n\r\n  MchangeButton: {\r\n    fontFamily: 'Noto Sans KR',\r\n    fontWeight: 'bold',\r\n    backgroundColor: 'rgb(180,180,180)',\r\n    color: 'white',\r\n    width: '60vw',\r\n    height: '5vh',\r\n    borderRadius: '3vw',\r\n    margin: '1vh 0',\r\n    '&:hover': {\r\n      backgroundColor: 'rgb(150,150,150)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserPageMobile = (props) => {\r\n  const {\r\n    onClickLogout,\r\n    currentUserName,\r\n    currentUserCabinetIdx,\r\n    currentUserCabinetTitle,\r\n    cabinetCancel,\r\n    updatePW,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const classes = useStyles();\r\n  const [currentPassword, setCurrent] = React.useState('');\r\n  const [changePassword, setChange] = React.useState('');\r\n  const [confirmPassword, setConfirm] = React.useState('');\r\n  const cabinetTitle = ['001', '049', '061', '085', '145'];\r\n\r\n  const currnetPasswordHandler = (e) => {\r\n    setCurrent(e.target.value);\r\n  };\r\n\r\n  const changePasswordHandler = (e) => {\r\n    setChange(e.target.value);\r\n  };\r\n\r\n  const confirmPasswordHandler = (e) => {\r\n    setConfirm(e.target.value);\r\n  };\r\n\r\n  const passwordChangeFunc = async () => {\r\n    await updatePW(currentPassword, changePassword, confirmPassword);\r\n    setCurrent('');\r\n    setChange('');\r\n    setConfirm('');\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100%' }}>\r\n      <Mobile>\r\n        <header>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: 'black',\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              height: '8vh',\r\n              width: '100%',\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <div style={{ left: '4vw', position: 'absolute' }}>\r\n              <Link to=\"/main\">\r\n                <img\r\n                  src={backwards}\r\n                  alt=\"backwards\"\r\n                  style={{\r\n                    width: '5vw',\r\n                    filter: 'invert(100%)',\r\n                  }}\r\n                />\r\n              </Link>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                right: '4vw',\r\n                backgroundColor: 'white',\r\n                borderRadius: '1vw',\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleClick}\r\n                style={{ backgroundColor: 'transparent' }}\r\n                disableRipple\r\n              >\r\n                <MenuIcon />\r\n              </Button>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={onClickLogout}\r\n                  style={{ fontFamily: 'Noto Sans KR' }}\r\n                >\r\n                  로그아웃\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Container style={{ marginTop: '10vh' }}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              border: '5px solid lightgray',\r\n              borderRadius: '6vw',\r\n              width: '80%',\r\n              height: '50%',\r\n              margin: '2vh 0',\r\n              padding: '3vh 0 4vh',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flexGrow: 1,\r\n                width: '80%',\r\n              }}\r\n            >\r\n              <MUserpageTitle style={{ fontFamily: 'Noto Sans KR' }}>\r\n                사물함위치\r\n              </MUserpageTitle>\r\n              <div\r\n                style={{\r\n                  height: 'auto',\r\n                  overflow: 'hidden',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    margin: '4vh 0 1vh',\r\n                    paddingBottom: '5vh',\r\n                    fontSize: '1.2rem',\r\n                    flexDirection: 'column',\r\n                    borderBottom: '1px solid gray',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ marginBottom: '3vh', fontFamily: 'Noto Sans KR' }}\r\n                  >\r\n                    {currentUserCabinetTitle && currentUserCabinetTitle !== 0\r\n                      ? `사물함위치 : ${\r\n                          cabinetTitle[\r\n                            // eslint-disable-next-line radix\r\n                            parseInt(\r\n                              currentUserCabinetTitle.substr(\r\n                                currentUserCabinetTitle.length - 1,\r\n                              ),\r\n                            ) - 1\r\n                          ]\r\n                        } -\r\n                    ${currentUserCabinetIdx}번 사물함`\r\n                      : `예약된 사물함이 없습니다.`}\r\n                  </div>\r\n                  {currentUserCabinetTitle !== 0 ? (\r\n                    <Button\r\n                      className={classes.McancleButton}\r\n                      onClick={cabinetCancel}\r\n                      disabled={currentUserCabinetTitle === 0}\r\n                    >\r\n                      취소\r\n                    </Button>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ flexGrow: 2, width: '80%' }}>\r\n              <MUserpageTitle style={{ fontFamily: 'Noto Sans KR' }}>\r\n                비밀번호 변경\r\n              </MUserpageTitle>\r\n              <div\r\n                style={{\r\n                  height: 'auto',\r\n                  overflow: 'hidden',\r\n                  margin: '2vh 0',\r\n                }}\r\n              >\r\n                <FormControl>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                      flexDirection: 'column',\r\n                      marginTop: '1vh',\r\n                      width: '100%',\r\n                    }}\r\n                  >\r\n                    <center>\r\n                      <TextField\r\n                        id=\"currentpassword\"\r\n                        label=\"현재 비밀번호\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n                        value={currentPassword}\r\n                        onChange={currnetPasswordHandler}\r\n                        placeholder=\"현재 비밀번호를 입력해주세요.\"\r\n                        margin=\"dense\"\r\n                        style={{\r\n                          width: '60vw',\r\n                          margin: '1vh 0',\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        id=\"changepassword\"\r\n                        label=\"변경 비밀번호\"\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        type=\"password\"\r\n                        value={changePassword}\r\n                        placeholder=\"6글자 이상의 비밀번호를 입력해주세요.\"\r\n                        onChange={changePasswordHandler}\r\n                        style={{\r\n                          width: '60vw',\r\n                          margin: '1vh 0',\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        id=\"confirmpassword\"\r\n                        label=\"비밀번호 확인\"\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        placeholder=\"위와 동일한 6글자 이상의 비밀번호를 입력해주세요.\"\r\n                        onChange={confirmPasswordHandler}\r\n                        style={{\r\n                          width: '60vw',\r\n                          margin: '1vh 0',\r\n                        }}\r\n                      />\r\n                    </center>\r\n                    <Button\r\n                      className={classes.MchangeButton}\r\n                      onClick={passwordChangeFunc}\r\n                      style={{\r\n                        fontFamily: 'Noto Sans KR',\r\n                        backgroundColor: 'rgb(63,81,181)',\r\n                        color: 'white',\r\n                      }}\r\n                    >\r\n                      변경하기\r\n                    </Button>\r\n                  </div>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Mobile>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserPageMobile.propTypes = {\r\n  onClickLogout: PropTypes.func.isRequired,\r\n  currentUserName: PropTypes.string.isRequired,\r\n  currentUserCabinetIdx: PropTypes.number.isRequired,\r\n  currentUserCabinetTitle: PropTypes.string.isRequired,\r\n  cabinetCancel: PropTypes.func.isRequired,\r\n  updatePW: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserPageMobile;\r\n","import Swal from 'sweetalert2';\r\n\r\nimport firebase from 'firebase/app';\r\nimport getFirebaseErrorMessage from '../error/auth/authError';\r\n\r\nconst { auth } = require('../../configs/firebase.config');\r\n\r\nconst updatePassword = (currentPW, newPW, confirmPW) => {\r\n  if (newPW !== confirmPW) {\r\n    return Swal.fire({\r\n      icon: 'error',\r\n      text: '비밀번호 확인이 일치하지 않습니다.',\r\n      showConfirmButton: false,\r\n      width: 'auto',\r\n      fontSize: '2rem',\r\n      timer: 1500,\r\n    });\r\n  }\r\n  const user = auth.currentUser;\r\n  const credential = firebase.auth.EmailAuthProvider.credential(\r\n    user.email,\r\n    currentPW,\r\n  );\r\n  user\r\n    .reauthenticateWithCredential(credential)\r\n    .then(() => {\r\n      user\r\n        .updatePassword(newPW)\r\n        .then(() => {\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: '비밀번호 변경 성공',\r\n            text: `비밀번호가 성공적으로 변경되었습니다!`,\r\n            showConfirmButton: true,\r\n            width: '25rem',\r\n            timer: 5000,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: '비밀번호 변경 실패',\r\n            text: getFirebaseErrorMessage(error.code),\r\n            showConfirmButton: true,\r\n            width: '25rem',\r\n            timer: 5000,\r\n          });\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n      return Swal.fire({\r\n        icon: 'error',\r\n        text: '현재 비밀번호가 일치하지 않습니다.',\r\n        showConfirmButton: false,\r\n        width: 'auto',\r\n        fontSize: '2rem',\r\n        timer: 1500,\r\n      });\r\n    });\r\n};\r\n\r\nexport default updatePassword;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport LoadingPage from '../Pages/LoadingPage';\r\nimport Userpage from '../Pages/Userpage';\r\nimport UserpageMobile from '../Mobile/UserPageMobile';\r\nimport cancelCabinet from '../utils/firebase/cancelCabinet';\r\nimport logOutUser from '../utils/firebase/logoutUser';\r\nimport updatePassword from '../utils/firebase/updatePassword';\r\nimport { Mobile, Default } from '../MediaQuery';\r\n\r\nconst UserPageContainer = () => {\r\n  const data = useSelector((state) => state.cabinet.currentCabinets);\r\n  const history = useHistory();\r\n  const currentUserCabinetNum = useSelector((state) => state.auth.cabinetTitle);\r\n  const currentUserCabinetIdx = useSelector((state) => state.auth.cabinetIdx);\r\n  const currentUserName = useSelector((state) => state.auth.currentUserName);\r\n  const currentUserID = useSelector((state) => state.auth.currentUserID);\r\n  const userId = useSelector((state) => state.auth.currentUser.uid);\r\n\r\n  const onClickLogout = () => {\r\n    logOutUser(history);\r\n  };\r\n  const cabinetCancel = () => {\r\n    cancelCabinet(\r\n      currentUserCabinetNum,\r\n      currentUserCabinetIdx,\r\n      currentUserID,\r\n      userId,\r\n      currentUserName,\r\n    );\r\n  };\r\n\r\n  const updatePW = (currentPW, newPW, confirmPW) => {\r\n    updatePassword(currentPW, newPW, confirmPW);\r\n  };\r\n  return (\r\n    <>\r\n      {userId ? (\r\n        <>\r\n          {data ? (\r\n            <>\r\n              <Default>\r\n                <Userpage\r\n                  onClickLogout={onClickLogout}\r\n                  currentUserName={currentUserName}\r\n                  currentUserCabinetIdx={currentUserCabinetIdx}\r\n                  currentUserCabinetTitle={currentUserCabinetNum}\r\n                  cabinetCancel={cabinetCancel}\r\n                  updatePW={updatePW}\r\n                />\r\n              </Default>\r\n              <Mobile>\r\n                <UserpageMobile\r\n                  onClickLogout={onClickLogout}\r\n                  currentUserName={currentUserName}\r\n                  currentUserCabinetIdx={currentUserCabinetIdx}\r\n                  currentUserCabinetTitle={currentUserCabinetNum}\r\n                  cabinetCancel={cabinetCancel}\r\n                  updatePW={updatePW}\r\n                />\r\n              </Mobile>\r\n            </>\r\n          ) : (\r\n            <LoadingPage />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <LoadingPage />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPageContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Default, Mobile } from '../MediaQuery';\r\nimport backwards from '../image/Backward.png';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-contents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 9vh;\r\n  height: 80%;\r\n  width: 100%;\r\n`;\r\n\r\nconst AdminpageTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.5vw;\r\n  font-weight: bold;\r\n  padding: 1vh 0 2vh;\r\n  border-bottom: 1px solid RGB(200, 200, 200);\r\n`;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cancleButton: {\r\n    fontFamily: 'Noto Sans KR',\r\n    fontWeight: 'bold',\r\n    backgroundColor: 'red',\r\n    color: 'white',\r\n    opacity: 0.6,\r\n    padding: '0.5vh 2vw',\r\n    margin: '3vh 0 0',\r\n    borderRadius: '0.5vw',\r\n    '&:hover': {\r\n      backgroundColor: 'red',\r\n      opacity: 1,\r\n    },\r\n  },\r\n\r\n  changeButton: {\r\n    fontFamily: 'Noto Sans KR',\r\n    fontWeight: 'bold',\r\n    backgroundColor: 'rgb(180,180,180)',\r\n    color: 'white',\r\n    width: '25vw',\r\n    height: '6vh',\r\n    borderRadius: '0.5vw',\r\n    margin: '1vh 0',\r\n    '&:hover': {\r\n      backgroundColor: 'rgb(150,150,150)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst AdminPage = (props) => {\r\n  const {\r\n    onClickLogout,\r\n    currentUserName,\r\n    updatePW,\r\n    total,\r\n    serverStatus,\r\n    toggleServer,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const classes = useStyles();\r\n  const [currentPassword, setCurrent] = React.useState('');\r\n  const [changePassword, setChange] = React.useState('');\r\n  const [confirmPassword, setConfirm] = React.useState('');\r\n\r\n  const currnetPasswordHandler = (e) => {\r\n    setCurrent(e.target.value);\r\n  };\r\n\r\n  const changePasswordHandler = (e) => {\r\n    setChange(e.target.value);\r\n  };\r\n\r\n  const confirmPasswordHandler = (e) => {\r\n    setConfirm(e.target.value);\r\n  };\r\n\r\n  const passwordChangeFunc = () => {\r\n    updatePW(currentPassword, changePassword, confirmPassword);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100%' }}>\r\n      <Default>\r\n        <header>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: 'black',\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              height: '10vh',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <div style={{ left: '2vw', position: 'absolute' }}>\r\n              <Link to=\"/main\">\r\n                <img\r\n                  src={backwards}\r\n                  alt=\"backwards\"\r\n                  style={{\r\n                    width: '1.5vw',\r\n                    filter: 'invert(100%)',\r\n                  }}\r\n                />\r\n              </Link>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                right: '5vw',\r\n                backgroundColor: 'white',\r\n                borderRadius: '0.5rem',\r\n                padding: '0.5vh 1vw',\r\n                fontFamily: 'Noto Sans KR',\r\n              }}\r\n            >\r\n              {currentUserName}님 환영합니다!\r\n              <Button\r\n                onClick={handleClick}\r\n                style={{ backgroundColor: 'transparent', margin: '0 0 0 2vw' }}\r\n                disableRipple\r\n              >\r\n                <MenuIcon />\r\n              </Button>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={onClickLogout}\r\n                  style={{ fontFamily: 'Noto Sans KR' }}\r\n                >\r\n                  로그아웃\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Container style={{ marginTop: '14vh' }}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              border: '3px solid lightgray',\r\n              borderRadius: '2vw',\r\n              width: '40vw',\r\n              height: '75vh',\r\n              padding: '2vh 0',\r\n              columnGap: '2vh',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flexGrow: 1,\r\n                width: '80%',\r\n              }}\r\n            >\r\n              <AdminpageTitle style={{ fontFamily: 'Noto Sans KR' }}>\r\n                관리자 페이지\r\n              </AdminpageTitle>\r\n              <div\r\n                style={{\r\n                  height: 'auto',\r\n                  overflow: 'hidden',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    justifyContent: 'space-evenly',\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    margin: '4vh 0 2vh',\r\n                    fontSize: '2vw',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <div style={{ fontFamily: 'Noto Sans KR' }}>\r\n                    현재 예약된 사물함 수 : {total}개\r\n                  </div>\r\n                  <center>\r\n                    <Button\r\n                      className={classes.cancleButton}\r\n                      onClick={toggleServer}\r\n                      style={{ fontFamily: 'Noto Sans KR' }}\r\n                    >\r\n                      {serverStatus?.status?.status ? '서버 닫기' : '서버 열기'}\r\n                    </Button>\r\n                  </center>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ flexGrow: 2, width: '80%' }}>\r\n              <AdminpageTitle>비밀번호 변경</AdminpageTitle>\r\n              <div\r\n                style={{\r\n                  height: 'auto',\r\n                  overflow: 'hidden',\r\n                  margin: '2vh 0',\r\n                }}\r\n              >\r\n                <FormControl>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                      flexDirection: 'column',\r\n                      marginTop: '1vh',\r\n                      width: '100%',\r\n                    }}\r\n                  >\r\n                    <center>\r\n                      <TextField\r\n                        label=\"현재 비밀번호\"\r\n                        variant=\"outlined\"\r\n                        onChange={currnetPasswordHandler}\r\n                        style={{ width: '25vw', margin: '1.5vh 0' }}\r\n                      />\r\n                      <TextField\r\n                        label=\"변경 비밀번호\"\r\n                        variant=\"outlined\"\r\n                        onChange={changePasswordHandler}\r\n                        style={{ width: '25vw', margin: '1.5vh 0' }}\r\n                      />\r\n                      <TextField\r\n                        label=\"비밀번호 확인\"\r\n                        variant=\"outlined\"\r\n                        onChange={confirmPasswordHandler}\r\n                        style={{ width: '25vw', margin: '1.5vh 0' }}\r\n                      />\r\n                    </center>\r\n                    <Button\r\n                      className={classes.changeButton}\r\n                      onClick={passwordChangeFunc}\r\n                    >\r\n                      변경하기\r\n                    </Button>\r\n                  </div>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Default>\r\n      {/* <Mobile>\r\n        <header>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: 'black',\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              height: '8vh',\r\n              width: '100%',\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <div style={{ left: '4vw', position: 'absolute' }}>\r\n              <Link to=\"/main\">\r\n                <img\r\n                  src={backwards}\r\n                  alt=\"backwards\"\r\n                  style={{\r\n                    width: '5vw',\r\n                    filter: 'invert(100%)',\r\n                  }}\r\n                />\r\n              </Link>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                right: '4vw',\r\n                backgroundColor: 'white',\r\n                borderRadius: '1vw',\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleClick}\r\n                style={{ backgroundColor: 'transparent' }}\r\n                disableRipple\r\n              >\r\n                <MenuIcon />\r\n              </Button>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={onClickLogout}\r\n                  style={{ fontFamily: 'Noto Sans KR' }}\r\n                >\r\n                  로그아웃\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Container style={{ marginTop: '10vh' }}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              border: '5px solid lightgray',\r\n              borderRadius: '6vw',\r\n              width: '80%',\r\n              height: '50%',\r\n              margin: '2vh 0',\r\n              padding: '3vh 0 4vh',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flexGrow: 1,\r\n                width: '80%',\r\n              }}\r\n            >\r\n              <MAdminpageTitle>관리자 페이지</MAdminpageTitle>\r\n              <div\r\n                style={{\r\n                  height: 'auto',\r\n                  overflow: 'hidden',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    margin: '4vh 0 1vh',\r\n                    paddingBottom: '3vh',\r\n                    fontSize: '1.2rem',\r\n                    flexDirection: 'column',\r\n                    borderBottom: '1px solid gray',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ marginBottom: '1vh', fontFamily: 'Noto Sans KR' }}\r\n                  >\r\n                    현재 예약된 사물함 수 : {total}개\r\n                    <center>\r\n                      <Button\r\n                        className={classes.McancleButton}\r\n                        onClick={toggleServer}\r\n                        style={{ marginTop: '3vh' }}\r\n                      >\r\n                        {serverStatus?.status?.status\r\n                          ? '서버 닫기'\r\n                          : '서버 열기'}\r\n                      </Button>\r\n                    </center>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ flexGrow: 2, width: '80%' }}>\r\n              <MAdminpageTitle>비밀번호 변경</MAdminpageTitle>\r\n              <div\r\n                style={{\r\n                  height: 'auto',\r\n                  overflow: 'hidden',\r\n                  margin: '2vh 0',\r\n                }}\r\n              >\r\n                <FormControl>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                      flexDirection: 'column',\r\n                      marginTop: '1vh',\r\n                      width: '100%',\r\n                    }}\r\n                  >\r\n                    <center>\r\n                      <TextField\r\n                        id=\"currentpassword\"\r\n                        label=\"현재 비밀번호\"\r\n                        variant=\"outlined\"\r\n                        onChange={currnetPasswordHandler}\r\n                        margin=\"dense\"\r\n                        style={{\r\n                          width: '95%',\r\n                          margin: '2vh 0',\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        id=\"changepassword\"\r\n                        label=\"변경 비밀번호\"\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        onChange={changePasswordHandler}\r\n                        style={{\r\n                          width: '95%',\r\n                          margin: '2vh 0',\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        id=\"confirmpassword\"\r\n                        label=\"비밀번호 확인\"\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        onChange={confirmPasswordHandler}\r\n                        style={{\r\n                          width: '95%',\r\n                          margin: '1.5vh 0',\r\n                        }}\r\n                      />\r\n                    </center>\r\n                    <Button\r\n                      className={classes.MchangeButton}\r\n                      onClick={passwordChangeFunc}\r\n                    >\r\n                      변경하기\r\n                    </Button>\r\n                  </div>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Mobile> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nAdminPage.propTypes = {\r\n  onClickLogout: PropTypes.func.isRequired,\r\n  currentUserName: PropTypes.string.isRequired,\r\n  updatePW: PropTypes.func.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  serverStatus: PropTypes.objectOf.isRequired,\r\n  toggleServer: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AdminPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Default, Mobile } from '../MediaQuery';\r\nimport backwards from '../image/Backward.png';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-contents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 9vh;\r\n  height: 80%;\r\n  width: 100%;\r\n`;\r\n\r\nconst MAdminpageTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 6vw;\r\n  font-weight: bold;\r\n  padding: 1vh 0 0.5vh;\r\n`;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  McancleButton: {\r\n    fontFamily: 'Noto Sans KR',\r\n    backgroundColor: 'red',\r\n    opacity: 0.6,\r\n    fontSize: '0.5rem',\r\n    color: 'white',\r\n    borderRadius: '2vw',\r\n    '&:hover': {\r\n      backgroundColor: 'red',\r\n      opacity: 1,\r\n    },\r\n  },\r\n\r\n  MchangeButton: {\r\n    fontFamily: 'Noto Sans KR',\r\n    fontWeight: 'bold',\r\n    backgroundColor: 'rgb(180,180,180)',\r\n    color: 'white',\r\n    width: '60vw',\r\n    height: '5vh',\r\n    borderRadius: '3vw',\r\n    margin: '1vh 0',\r\n    '&:hover': {\r\n      backgroundColor: 'rgb(150,150,150)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst AdminPageMobile = (props) => {\r\n  const {\r\n    onClickLogout,\r\n    currentUserName,\r\n    updatePW,\r\n    total,\r\n    serverStatus,\r\n    toggleServer,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const classes = useStyles();\r\n  const [currentPassword, setCurrent] = React.useState('');\r\n  const [changePassword, setChange] = React.useState('');\r\n  const [confirmPassword, setConfirm] = React.useState('');\r\n\r\n  const currnetPasswordHandler = (e) => {\r\n    setCurrent(e.target.value);\r\n  };\r\n\r\n  const changePasswordHandler = (e) => {\r\n    setChange(e.target.value);\r\n  };\r\n\r\n  const confirmPasswordHandler = (e) => {\r\n    setConfirm(e.target.value);\r\n  };\r\n\r\n  const passwordChangeFunc = () => {\r\n    updatePW(currentPassword, changePassword, confirmPassword);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100%' }}>\r\n      <Mobile>\r\n        <header>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: 'black',\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              height: '8vh',\r\n              width: '100%',\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <div style={{ left: '4vw', position: 'absolute' }}>\r\n              <Link to=\"/main\">\r\n                <img\r\n                  src={backwards}\r\n                  alt=\"backwards\"\r\n                  style={{\r\n                    width: '5vw',\r\n                    filter: 'invert(100%)',\r\n                  }}\r\n                />\r\n              </Link>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                right: '4vw',\r\n                backgroundColor: 'white',\r\n                borderRadius: '1vw',\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleClick}\r\n                style={{ backgroundColor: 'transparent' }}\r\n                disableRipple\r\n              >\r\n                <MenuIcon />\r\n              </Button>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={onClickLogout}\r\n                  style={{ fontFamily: 'Noto Sans KR' }}\r\n                >\r\n                  로그아웃\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Container style={{ marginTop: '10vh' }}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              border: '5px solid lightgray',\r\n              borderRadius: '6vw',\r\n              width: '80%',\r\n              height: '50%',\r\n              margin: '2vh 0',\r\n              padding: '3vh 0 4vh',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flexGrow: 1,\r\n                width: '80%',\r\n              }}\r\n            >\r\n              <MAdminpageTitle>관리자 페이지</MAdminpageTitle>\r\n              <div\r\n                style={{\r\n                  height: 'auto',\r\n                  overflow: 'hidden',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    margin: '4vh 0 1vh',\r\n                    paddingBottom: '3vh',\r\n                    fontSize: '1.2rem',\r\n                    flexDirection: 'column',\r\n                    borderBottom: '1px solid gray',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ marginBottom: '1vh', fontFamily: 'Noto Sans KR' }}\r\n                  >\r\n                    현재 예약된 사물함 수 : {total}개\r\n                    <center>\r\n                      <Button\r\n                        className={classes.McancleButton}\r\n                        onClick={toggleServer}\r\n                        style={{ marginTop: '3vh' }}\r\n                      >\r\n                        {serverStatus?.status?.status\r\n                          ? '서버 닫기'\r\n                          : '서버 열기'}\r\n                      </Button>\r\n                    </center>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ flexGrow: 2, width: '80%' }}>\r\n              <MAdminpageTitle>비밀번호 변경</MAdminpageTitle>\r\n              <div\r\n                style={{\r\n                  height: 'auto',\r\n                  overflow: 'hidden',\r\n                  margin: '2vh 0',\r\n                }}\r\n              >\r\n                <FormControl>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                      flexDirection: 'column',\r\n                      marginTop: '1vh',\r\n                      width: '100%',\r\n                    }}\r\n                  >\r\n                    <center>\r\n                      <TextField\r\n                        id=\"currentpassword\"\r\n                        label=\"현재 비밀번호\"\r\n                        variant=\"outlined\"\r\n                        onChange={currnetPasswordHandler}\r\n                        margin=\"dense\"\r\n                        style={{\r\n                          width: '95%',\r\n                          margin: '2vh 0',\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        id=\"changepassword\"\r\n                        label=\"변경 비밀번호\"\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        onChange={changePasswordHandler}\r\n                        style={{\r\n                          width: '95%',\r\n                          margin: '2vh 0',\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        id=\"confirmpassword\"\r\n                        label=\"비밀번호 확인\"\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        onChange={confirmPasswordHandler}\r\n                        style={{\r\n                          width: '95%',\r\n                          margin: '1.5vh 0',\r\n                        }}\r\n                      />\r\n                    </center>\r\n                    <Button\r\n                      className={classes.MchangeButton}\r\n                      onClick={passwordChangeFunc}\r\n                    >\r\n                      변경하기\r\n                    </Button>\r\n                  </div>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Mobile>\r\n    </div>\r\n  );\r\n};\r\n\r\nAdminPageMobile.propTypes = {\r\n  onClickLogout: PropTypes.func.isRequired,\r\n  currentUserName: PropTypes.string.isRequired,\r\n  updatePW: PropTypes.func.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  serverStatus: PropTypes.objectOf.isRequired,\r\n  toggleServer: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AdminPageMobile;\r\n","import { database } from '../../configs/firebase.config';\r\n\r\nconst toggleServerStatus = () => {\r\n  database.ref(`server/`).once('value', (snapshot) => {\r\n    const { status } = snapshot.val();\r\n    if (status) {\r\n      return database.ref(`server`).set({\r\n        status: false,\r\n      });\r\n    }\r\n    return database.ref(`server`).set({\r\n      status: true,\r\n    });\r\n  });\r\n};\r\n\r\nexport default toggleServerStatus;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Mobile, Default } from '../MediaQuery';\r\nimport AdminPage from '../Pages/AdminPage';\r\nimport AdminPageMobile from '../Mobile/AdminPageMobile';\r\nimport LoadingPage from '../Pages/LoadingPage';\r\nimport logOutUser from '../utils/firebase/logoutUser';\r\nimport toggleServerStatus from '../utils/firebase/setServerStatus';\r\nimport updatePassword from '../utils/firebase/updatePassword';\r\n\r\nconst AdminPageContainer = () => {\r\n  const data = useSelector((state) => state.cabinet.currentCabinets);\r\n  const history = useHistory();\r\n  const currentUserCabinetNum = useSelector((state) => state.auth.cabinetTitle);\r\n  const currentUserCabinetIdx = useSelector((state) => state.auth.cabinetIdx);\r\n  const currentUserName = useSelector((state) => state.auth.currentUserName);\r\n  const userId = useSelector((state) => state.auth.currentUser.uid);\r\n  const [_map, visibleMap] = useState(false);\r\n  const serverStatus = useSelector((state) => state.server);\r\n  const onClickLogout = () => {\r\n    logOutUser(history);\r\n  };\r\n  const updatePW = (currentPW, newPW, confirmPW) => {\r\n    updatePassword(currentPW, newPW, confirmPW);\r\n  };\r\n  const [total, setTotal] = useState(0);\r\n  const toggleServer = () => {\r\n    toggleServerStatus();\r\n  };\r\n  useEffect(() => {\r\n    let count = 0;\r\n    if (data.currentCabinets) {\r\n      Object.keys(data.currentCabinets).forEach((key) => {\r\n        Object.keys(data.currentCabinets[key].item).forEach((keys) => {\r\n          if (\r\n            data.currentCabinets[key].item[keys] !== 0 &&\r\n            data.currentCabinets[key].item[keys] !== 2\r\n          ) {\r\n            count += 1;\r\n          }\r\n        });\r\n      });\r\n    }\r\n    setTotal(count);\r\n  }, [data]);\r\n  return (\r\n    <>\r\n      {userId ? (\r\n        <>\r\n          {data ? (\r\n            <>\r\n              <Default>\r\n                <AdminPage\r\n                  _map={_map}\r\n                  visibleMap={visibleMap}\r\n                  onClickLogout={onClickLogout}\r\n                  currentUserName={currentUserName}\r\n                  currentUserCabinetIdx={currentUserCabinetIdx}\r\n                  currentUserCabinetTitle={currentUserCabinetNum}\r\n                  updatePW={updatePW}\r\n                  total={total}\r\n                  serverStatus={serverStatus}\r\n                  toggleServer={toggleServer}\r\n                />\r\n              </Default>\r\n              <Mobile>\r\n                <AdminPageMobile\r\n                  _map={_map}\r\n                  visibleMap={visibleMap}\r\n                  onClickLogout={onClickLogout}\r\n                  currentUserName={currentUserName}\r\n                  currentUserCabinetIdx={currentUserCabinetIdx}\r\n                  currentUserCabinetTitle={currentUserCabinetNum}\r\n                  updatePW={updatePW}\r\n                  total={total}\r\n                  serverStatus={serverStatus}\r\n                  toggleServer={toggleServer}\r\n                />\r\n              </Mobile>\r\n            </>\r\n          ) : (\r\n            <LoadingPage />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <LoadingPage />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPageContainer;\r\n","import { setCurrentUserNameAndID } from '../../redux/auth/auth.reducer';\r\n\r\nconst { database } = require('../../configs/firebase.config');\r\n\r\nconst getUserData = (userId, dispatch) => {\r\n  database.ref(`users/${userId}`).on('value', (snapshot) => {\r\n    dispatch(\r\n      setCurrentUserNameAndID({\r\n        studentId: snapshot.val().studentID,\r\n        name: snapshot.val().name,\r\n        cabinetTitle: snapshot.val().cabinetTitle,\r\n        cabinetIdx: snapshot.val().cabinetIdx,\r\n        adminType: snapshot.val().adminType,\r\n      }),\r\n    );\r\n  });\r\n};\r\n\r\nexport default getUserData;\r\n","import { setCurrentCabinets } from '../../redux/cabinet/cabinet.reducer';\r\n\r\nconst { database } = require('../../configs/firebase.config');\r\n\r\nconst getCabinetData = (dispatch) => {\r\n  database.ref(`cabinet`).on('value', (snapshot) => {\r\n    dispatch(\r\n      setCurrentCabinets({\r\n        currentCabinets: snapshot.val(),\r\n      }),\r\n    );\r\n  });\r\n};\r\n\r\nexport default getCabinetData;\r\n","import { setCurrentServer } from '../../redux/server/server.reducer';\r\n\r\nconst { database } = require('../../configs/firebase.config');\r\n\r\nconst getServerData = (dispatch) => {\r\n  database.ref(`server`).on('value', (snapshot) => {\r\n    dispatch(\r\n      setCurrentServer({\r\n        status: snapshot.val().status,\r\n      }),\r\n    );\r\n  });\r\n};\r\n\r\nexport default getServerData;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth, database } from './configs/firebase.config';\r\nimport LoginContainer from './Container/LoginContainer';\r\nimport SIgnUpContainer from './Container/SIgnUpContainer';\r\nimport MainPageContainer from './Container/MainPageContainer';\r\nimport UserPageContainer from './Container/UserPageContainer';\r\nimport AdminPageContainer from './Container/AdminPageContainer';\r\nimport getUserData from './utils/firebase/getUserData';\r\nimport getCabinetData from './utils/firebase/getCabinetData';\r\nimport { clearCurrentUser, setCurrentUser } from './redux/auth/auth.reducer';\r\nimport getServerData from './utils/firebase/getServerData';\r\n\r\nconst Container = styled.div`\r\n  -ms-user-select: none;\r\n  -moz-user-select: -moz-none;\r\n  -khtml-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let uid = null;\r\n    let unsubscribeFromAuth = null;\r\n    unsubscribeFromAuth = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch(setCurrentUser(user));\r\n        uid = user.uid;\r\n        getUserData(user.uid, dispatch);\r\n      } else {\r\n        database.ref(`users/${uid}`).off('value');\r\n        dispatch(clearCurrentUser());\r\n      }\r\n    });\r\n    return () => unsubscribeFromAuth();\r\n  }, [setCurrentUser, clearCurrentUser]);\r\n  useEffect(() => {\r\n    getCabinetData(dispatch);\r\n    getServerData(dispatch);\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n        <Switch>\r\n          <Route path=\"/\" component={LoginContainer} exact />\r\n          <Route path=\"/signup\" component={SIgnUpContainer} exact />\r\n          <Route path=\"/main\" component={MainPageContainer} exact />\r\n          <Route path=\"/userpage\" component={UserPageContainer} exact />\r\n          <Route path=\"/adminpage\" component={AdminPageContainer} exact />\r\n        </Switch>\r\n      </Router>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst rootElement = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(rootElement, document.getElementById('root'));\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n// 파이어베이스 세팅\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyDSYQ9oxZR65J8sPSxl1xAXZ1B1SQRYaGg',\r\n  authDomain: 'sjswcabinet-ea577.firebaseapp.com',\r\n  databaseURL: 'https://sjswcabinet-ea577.firebaseio.com',\r\n  projectId: 'sjswcabinet-ea577',\r\n  storageBucket: 'sjswcabinet-ea577.appspot.com',\r\n  messagingSenderId: '194660072088',\r\n  appId: '1:194660072088:web:9a8d1f1fd6441882a2eeed',\r\n  measurementId: 'G-N9PJT20N9C',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const database = firebase.database();\r\n\r\nexport default firebase;\r\n"],"sourceRoot":""}